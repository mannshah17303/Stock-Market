{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getMatchBounds } from '../../utils';\nvar propTypes = {\n  children: PropTypes.string.isRequired,\n  highlightClassName: PropTypes.string,\n  search: PropTypes.string.isRequired\n};\n/**\n * Stripped-down version of https://github.com/helior/react-highlighter\n *\n * Results are already filtered by the time the component is used internally so\n * we can safely ignore case and diacritical marks for the purposes of matching.\n */\nvar Highlighter = function Highlighter(_ref) {\n  var children = _ref.children,\n    _ref$highlightClassNa = _ref.highlightClassName,\n    highlightClassName = _ref$highlightClassNa === void 0 ? 'rbt-highlight-text' : _ref$highlightClassNa,\n    search = _ref.search;\n  if (!search || !children) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n  var matchCount = 0;\n  var remaining = children;\n  var highlighterChildren = [];\n  while (remaining) {\n    var bounds = getMatchBounds(remaining, search);\n\n    // No match anywhere in the remaining string, stop.\n    if (!bounds) {\n      highlighterChildren.push(remaining);\n      break;\n    }\n\n    // Capture the string that leads up to a match.\n    var nonMatch = remaining.slice(0, bounds.start);\n    if (nonMatch) {\n      highlighterChildren.push(nonMatch);\n    }\n\n    // Capture the matching string.\n    var match = remaining.slice(bounds.start, bounds.end);\n    highlighterChildren.push( /*#__PURE__*/React.createElement(\"mark\", {\n      className: highlightClassName,\n      key: matchCount\n    }, match));\n    matchCount += 1;\n\n    // And if there's anything left over, continue the loop.\n    remaining = remaining.slice(bounds.end);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, highlighterChildren);\n};\nHighlighter.propTypes = propTypes;\nexport default Highlighter;","map":{"version":3,"names":["PropTypes","React","getMatchBounds","propTypes","children","string","isRequired","highlightClassName","search","Highlighter","_ref","_ref$highlightClassNa","createElement","Fragment","matchCount","remaining","highlighterChildren","bounds","push","nonMatch","slice","start","match","end","className","key"],"sources":["C:/Users/Admin/Desktop/StockMarket/stock/node_modules/react-bootstrap-typeahead/es/components/Highlighter/Highlighter.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getMatchBounds } from '../../utils';\nvar propTypes = {\n  children: PropTypes.string.isRequired,\n  highlightClassName: PropTypes.string,\n  search: PropTypes.string.isRequired\n};\n/**\n * Stripped-down version of https://github.com/helior/react-highlighter\n *\n * Results are already filtered by the time the component is used internally so\n * we can safely ignore case and diacritical marks for the purposes of matching.\n */\nvar Highlighter = function Highlighter(_ref) {\n  var children = _ref.children,\n    _ref$highlightClassNa = _ref.highlightClassName,\n    highlightClassName = _ref$highlightClassNa === void 0 ? 'rbt-highlight-text' : _ref$highlightClassNa,\n    search = _ref.search;\n  if (!search || !children) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n  var matchCount = 0;\n  var remaining = children;\n  var highlighterChildren = [];\n  while (remaining) {\n    var bounds = getMatchBounds(remaining, search);\n\n    // No match anywhere in the remaining string, stop.\n    if (!bounds) {\n      highlighterChildren.push(remaining);\n      break;\n    }\n\n    // Capture the string that leads up to a match.\n    var nonMatch = remaining.slice(0, bounds.start);\n    if (nonMatch) {\n      highlighterChildren.push(nonMatch);\n    }\n\n    // Capture the matching string.\n    var match = remaining.slice(bounds.start, bounds.end);\n    highlighterChildren.push( /*#__PURE__*/React.createElement(\"mark\", {\n      className: highlightClassName,\n      key: matchCount\n    }, match));\n    matchCount += 1;\n\n    // And if there's anything left over, continue the loop.\n    remaining = remaining.slice(bounds.end);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, highlighterChildren);\n};\nHighlighter.propTypes = propTypes;\nexport default Highlighter;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,aAAa;AAC5C,IAAIC,SAAS,GAAG;EACdC,QAAQ,EAAEJ,SAAS,CAACK,MAAM,CAACC,UAAU;EACrCC,kBAAkB,EAAEP,SAAS,CAACK,MAAM;EACpCG,MAAM,EAAER,SAAS,CAACK,MAAM,CAACC;AAC3B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,WAAW,GAAG,SAASA,WAAWA,CAACC,IAAI,EAAE;EAC3C,IAAIN,QAAQ,GAAGM,IAAI,CAACN,QAAQ;IAC1BO,qBAAqB,GAAGD,IAAI,CAACH,kBAAkB;IAC/CA,kBAAkB,GAAGI,qBAAqB,KAAK,KAAK,CAAC,GAAG,oBAAoB,GAAGA,qBAAqB;IACpGH,MAAM,GAAGE,IAAI,CAACF,MAAM;EACtB,IAAI,CAACA,MAAM,IAAI,CAACJ,QAAQ,EAAE;IACxB,OAAO,aAAaH,KAAK,CAACW,aAAa,CAACX,KAAK,CAACY,QAAQ,EAAE,IAAI,EAAET,QAAQ,CAAC;EACzE;EACA,IAAIU,UAAU,GAAG,CAAC;EAClB,IAAIC,SAAS,GAAGX,QAAQ;EACxB,IAAIY,mBAAmB,GAAG,EAAE;EAC5B,OAAOD,SAAS,EAAE;IAChB,IAAIE,MAAM,GAAGf,cAAc,CAACa,SAAS,EAAEP,MAAM,CAAC;;IAE9C;IACA,IAAI,CAACS,MAAM,EAAE;MACXD,mBAAmB,CAACE,IAAI,CAACH,SAAS,CAAC;MACnC;IACF;;IAEA;IACA,IAAII,QAAQ,GAAGJ,SAAS,CAACK,KAAK,CAAC,CAAC,EAAEH,MAAM,CAACI,KAAK,CAAC;IAC/C,IAAIF,QAAQ,EAAE;MACZH,mBAAmB,CAACE,IAAI,CAACC,QAAQ,CAAC;IACpC;;IAEA;IACA,IAAIG,KAAK,GAAGP,SAAS,CAACK,KAAK,CAACH,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACM,GAAG,CAAC;IACrDP,mBAAmB,CAACE,IAAI,EAAE,aAAajB,KAAK,CAACW,aAAa,CAAC,MAAM,EAAE;MACjEY,SAAS,EAAEjB,kBAAkB;MAC7BkB,GAAG,EAAEX;IACP,CAAC,EAAEQ,KAAK,CAAC,CAAC;IACVR,UAAU,IAAI,CAAC;;IAEf;IACAC,SAAS,GAAGA,SAAS,CAACK,KAAK,CAACH,MAAM,CAACM,GAAG,CAAC;EACzC;EACA,OAAO,aAAatB,KAAK,CAACW,aAAa,CAACX,KAAK,CAACY,QAAQ,EAAE,IAAI,EAAEG,mBAAmB,CAAC;AACpF,CAAC;AACDP,WAAW,CAACN,SAAS,GAAGA,SAAS;AACjC,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}