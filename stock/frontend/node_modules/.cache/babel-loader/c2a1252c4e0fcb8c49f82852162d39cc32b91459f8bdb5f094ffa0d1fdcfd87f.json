{"ast":null,"code":"import getOptionProperty from './getOptionProperty';\nexport function isDisabledOption(index, items) {\n  var option = items[index];\n  return !!option && !!getOptionProperty(option, 'disabled');\n}\nexport function skipDisabledOptions(currentIndex, key, items) {\n  var newIndex = currentIndex;\n  while (isDisabledOption(newIndex, items)) {\n    newIndex += key === 'ArrowUp' ? -1 : 1;\n  }\n  return newIndex;\n}\nexport default function getUpdatedActiveIndex(currentIndex, key, items) {\n  var newIndex = currentIndex;\n\n  // Increment or decrement index based on user keystroke.\n  newIndex += key === 'ArrowUp' ? -1 : 1;\n\n  // Skip over any disabled options.\n  newIndex = skipDisabledOptions(newIndex, key, items);\n\n  // If we've reached the end, go back to the beginning or vice-versa.\n  if (newIndex === items.length) {\n    newIndex = -1;\n  } else if (newIndex === -2) {\n    newIndex = items.length - 1;\n\n    // Skip over any disabled options.\n    newIndex = skipDisabledOptions(newIndex, key, items);\n  }\n  return newIndex;\n}","map":{"version":3,"names":["getOptionProperty","isDisabledOption","index","items","option","skipDisabledOptions","currentIndex","key","newIndex","getUpdatedActiveIndex","length"],"sources":["C:/Users/Admin/Desktop/StockMarket/frontend/stock/node_modules/react-bootstrap-typeahead/es/utils/getUpdatedActiveIndex.js"],"sourcesContent":["import getOptionProperty from './getOptionProperty';\nexport function isDisabledOption(index, items) {\n  var option = items[index];\n  return !!option && !!getOptionProperty(option, 'disabled');\n}\nexport function skipDisabledOptions(currentIndex, key, items) {\n  var newIndex = currentIndex;\n  while (isDisabledOption(newIndex, items)) {\n    newIndex += key === 'ArrowUp' ? -1 : 1;\n  }\n  return newIndex;\n}\nexport default function getUpdatedActiveIndex(currentIndex, key, items) {\n  var newIndex = currentIndex;\n\n  // Increment or decrement index based on user keystroke.\n  newIndex += key === 'ArrowUp' ? -1 : 1;\n\n  // Skip over any disabled options.\n  newIndex = skipDisabledOptions(newIndex, key, items);\n\n  // If we've reached the end, go back to the beginning or vice-versa.\n  if (newIndex === items.length) {\n    newIndex = -1;\n  } else if (newIndex === -2) {\n    newIndex = items.length - 1;\n\n    // Skip over any disabled options.\n    newIndex = skipDisabledOptions(newIndex, key, items);\n  }\n  return newIndex;\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC7C,IAAIC,MAAM,GAAGD,KAAK,CAACD,KAAK,CAAC;EACzB,OAAO,CAAC,CAACE,MAAM,IAAI,CAAC,CAACJ,iBAAiB,CAACI,MAAM,EAAE,UAAU,CAAC;AAC5D;AACA,OAAO,SAASC,mBAAmBA,CAACC,YAAY,EAAEC,GAAG,EAAEJ,KAAK,EAAE;EAC5D,IAAIK,QAAQ,GAAGF,YAAY;EAC3B,OAAOL,gBAAgB,CAACO,QAAQ,EAAEL,KAAK,CAAC,EAAE;IACxCK,QAAQ,IAAID,GAAG,KAAK,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;EACxC;EACA,OAAOC,QAAQ;AACjB;AACA,eAAe,SAASC,qBAAqBA,CAACH,YAAY,EAAEC,GAAG,EAAEJ,KAAK,EAAE;EACtE,IAAIK,QAAQ,GAAGF,YAAY;;EAE3B;EACAE,QAAQ,IAAID,GAAG,KAAK,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;;EAEtC;EACAC,QAAQ,GAAGH,mBAAmB,CAACG,QAAQ,EAAED,GAAG,EAAEJ,KAAK,CAAC;;EAEpD;EACA,IAAIK,QAAQ,KAAKL,KAAK,CAACO,MAAM,EAAE;IAC7BF,QAAQ,GAAG,CAAC,CAAC;EACf,CAAC,MAAM,IAAIA,QAAQ,KAAK,CAAC,CAAC,EAAE;IAC1BA,QAAQ,GAAGL,KAAK,CAACO,MAAM,GAAG,CAAC;;IAE3B;IACAF,QAAQ,GAAGH,mBAAmB,CAACG,QAAQ,EAAED,GAAG,EAAEJ,KAAK,CAAC;EACtD;EACA,OAAOK,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}