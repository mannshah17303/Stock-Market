{"ast":null,"code":"import { memo as e, useCallback as t, createElement as o, useMemo as n, Fragment as i, useRef as a, useEffect as r } from \"react\";\nimport { useTheme as l, usePropertyAccessor as d, useValueFormatter as b, useMotionConfig as u, Container as p, useDimensions as c, bindDefs as s, SvgWrapper as v, ResponsiveWrapper as h, degreesToRadians as f, getRelativeCursor as L, isCursorInRect as g } from \"@nivo/core\";\nimport m from \"lodash/omit\";\nimport y from \"lodash/cloneDeep\";\nimport C from \"lodash/startCase\";\nimport { treemapBinary as x, treemapDice as P, treemapSlice as M, treemapSliceDice as w, treemapSquarify as S, treemap as O, hierarchy as k } from \"d3-hierarchy\";\nimport { useOrdinalColorScale as T, useInheritedColor as W } from \"@nivo/colors\";\nimport { BasicTooltip as I, useTooltip as z } from \"@nivo/tooltip\";\nimport { to as B, animated as R, useTransition as E } from \"@react-spring/web\";\nimport { jsxs as X, jsx as Y, Fragment as F } from \"react/jsx-runtime\";\nfunction j() {\n  return j = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var o = arguments[t];\n      for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (e[n] = o[n]);\n    }\n    return e;\n  }, j.apply(this, arguments);\n}\nfunction D(e, t) {\n  if (null == e) return {};\n  var o,\n    n,\n    i = {},\n    a = Object.keys(e);\n  for (n = 0; n < a.length; n++) o = a[n], t.indexOf(o) >= 0 || (i[o] = e[o]);\n  return i;\n}\nvar H = function (e, t) {\n    return B([e, t], function (e, t) {\n      return \"translate(\" + e + \",\" + t + \")\";\n    });\n  },\n  V = function (e, t) {\n    return B([e, t], function (e, t) {\n      return \"translate(\" + e + \"px, \" + t + \"px)\";\n    });\n  },\n  q = function (e, t, o) {\n    return B([e, t, o], function (e, t, o) {\n      return \"translate(\" + e + \",\" + t + \") rotate(\" + o + \")\";\n    });\n  },\n  A = function (e, t, o) {\n    return B([e, t, o], function (e, t, o) {\n      return \"translate(\" + e + \"px,\" + t + \"px) rotate(\" + o + \"deg)\";\n    });\n  },\n  G = function (e, t, o) {\n    return B([e, t, o], function (e, t, o) {\n      return \"translate(\" + (e - (0 === o ? 0 : 5)) + \"px,\" + (t - (0 === o ? 5 : 0)) + \"px) rotate(\" + o + \"deg)\";\n    });\n  },\n  J = e(function (e) {\n    var t = e.node,\n      o = e.animatedProps,\n      n = e.borderWidth,\n      i = e.enableLabel,\n      a = e.enableParentLabel,\n      r = e.labelSkipSize,\n      d = l(),\n      b = i && t.isLeaf && (0 === r || Math.min(t.width, t.height) > r),\n      u = a && t.isParent;\n    return X(R.g, {\n      transform: H(o.x, o.y),\n      children: [Y(R.rect, {\n        \"data-testid\": \"node.\" + t.id,\n        width: B(o.width, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: B(o.height, function (e) {\n          return Math.max(e, 0);\n        }),\n        fill: t.fill ? t.fill : o.color,\n        strokeWidth: n,\n        stroke: t.borderColor,\n        fillOpacity: t.opacity,\n        onMouseEnter: t.onMouseEnter,\n        onMouseMove: t.onMouseMove,\n        onMouseLeave: t.onMouseLeave,\n        onClick: t.onClick\n      }), b && Y(R.text, {\n        \"data-testid\": \"label.\" + t.id,\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        style: j({}, d.labels.text, {\n          fill: t.labelTextColor,\n          pointerEvents: \"none\"\n        }),\n        fillOpacity: o.labelOpacity,\n        transform: q(o.labelX, o.labelY, o.labelRotation),\n        children: t.label\n      }), u && Y(R.text, {\n        \"data-testid\": \"parentLabel.\" + t.id,\n        dominantBaseline: \"central\",\n        style: j({}, d.labels.text, {\n          fill: t.parentLabelTextColor,\n          pointerEvents: \"none\"\n        }),\n        fillOpacity: o.parentLabelOpacity,\n        transform: q(o.parentLabelX, o.parentLabelY, o.parentLabelRotation),\n        children: t.parentLabel\n      })]\n    });\n  }),\n  K = e(function (e) {\n    var t = e.node;\n    return Y(I, {\n      id: t.id,\n      value: t.formattedValue,\n      enableChip: !0,\n      color: t.color\n    });\n  }),\n  N = e(function (e) {\n    var t = e.node,\n      o = e.animatedProps,\n      n = e.borderWidth,\n      i = e.enableLabel,\n      a = e.enableParentLabel,\n      r = e.labelSkipSize,\n      d = l(),\n      b = i && t.isLeaf && (0 === r || Math.min(t.width, t.height) > r),\n      u = a && t.isParent;\n    return X(R.div, {\n      \"data-testid\": \"node.\" + t.id,\n      id: t.path.replace(/[^\\w]/gi, \"-\"),\n      style: {\n        boxSizing: \"border-box\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        transform: V(o.x, o.y),\n        width: o.width,\n        height: o.height,\n        borderWidth: n,\n        borderStyle: \"solid\",\n        borderColor: t.borderColor,\n        overflow: \"hidden\"\n      },\n      children: [Y(R.div, {\n        style: {\n          boxSizing: \"border-box\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          opacity: t.opacity,\n          width: o.width,\n          height: o.height,\n          background: o.color\n        },\n        onMouseEnter: t.onMouseEnter,\n        onMouseMove: t.onMouseMove,\n        onMouseLeave: t.onMouseLeave,\n        onClick: t.onClick\n      }), b && Y(R.span, {\n        \"data-testid\": \"label.\" + t.id,\n        style: j({}, d.labels.text, {\n          position: \"absolute\",\n          display: \"flex\",\n          top: -5,\n          left: -5,\n          width: 10,\n          height: 10,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          whiteSpace: \"nowrap\",\n          color: t.labelTextColor,\n          transformOrigin: \"center center\",\n          transform: A(o.labelX, o.labelY, o.labelRotation),\n          opacity: o.labelOpacity,\n          pointerEvents: \"none\"\n        }),\n        children: t.label\n      }), u && Y(R.span, {\n        \"data-testid\": \"parentLabel.\" + t.id,\n        style: j({}, d.labels.text, {\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          whiteSpace: \"nowrap\",\n          width: 10,\n          height: 10,\n          color: t.parentLabelTextColor,\n          transformOrigin: \"top left\",\n          transform: G(o.parentLabelX, o.parentLabelY, o.parentLabelRotation),\n          opacity: o.parentLabelOpacity,\n          pointerEvents: \"none\"\n        }),\n        children: t.parentLabel\n      })]\n    });\n  }),\n  Q = {\n    layers: [\"nodes\"],\n    identity: \"id\",\n    value: \"value\",\n    tile: \"squarify\",\n    leavesOnly: !1,\n    innerPadding: 0,\n    outerPadding: 0,\n    colors: {\n      scheme: \"nivo\"\n    },\n    colorBy: \"pathComponents.1\",\n    nodeOpacity: .33,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelSkipSize: 0,\n    labelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    orientLabel: !0,\n    enableParentLabel: !0,\n    parentLabel: \"id\",\n    parentLabelSize: 20,\n    parentLabelPosition: \"top\",\n    parentLabelPadding: 6,\n    parentLabelTextColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    borderWidth: 1,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    isInteractive: !0,\n    tooltip: K,\n    role: \"img\",\n    animate: !0,\n    motionConfig: \"gentle\"\n  },\n  U = j({}, Q, {\n    nodeComponent: J,\n    defs: [],\n    fill: []\n  }),\n  Z = j({}, Q, {\n    nodeComponent: N\n  }),\n  $ = j({}, Q, {\n    pixelRatio: \"undefined\" != typeof window && window.devicePixelRatio || 1\n  }),\n  _ = {\n    binary: x,\n    dice: P,\n    slice: M,\n    sliceDice: w,\n    squarify: S\n  },\n  ee = function (e) {\n    var t = e.root,\n      o = e.getValue;\n    return n(function () {\n      return k(t).sum(o);\n    }, [t, o]);\n  },\n  te = function (e) {\n    var t = e.data,\n      o = e.width,\n      i = e.height,\n      a = e.identity,\n      r = void 0 === a ? Q.identity : a,\n      u = e.value,\n      p = void 0 === u ? Q.value : u,\n      c = e.valueFormat,\n      s = e.leavesOnly,\n      v = void 0 === s ? Q.leavesOnly : s,\n      h = e.tile,\n      f = void 0 === h ? Q.tile : h,\n      L = e.innerPadding,\n      g = void 0 === L ? Q.innerPadding : L,\n      x = e.outerPadding,\n      P = void 0 === x ? Q.outerPadding : x,\n      M = e.label,\n      w = void 0 === M ? Q.label : M,\n      S = e.orientLabel,\n      k = void 0 === S ? Q.orientLabel : S,\n      I = e.enableParentLabel,\n      z = void 0 === I ? Q.enableParentLabel : I,\n      B = e.parentLabel,\n      R = void 0 === B ? Q.parentLabel : B,\n      E = e.parentLabelSize,\n      X = void 0 === E ? Q.parentLabelSize : E,\n      Y = e.parentLabelPosition,\n      F = void 0 === Y ? Q.parentLabelPosition : Y,\n      D = e.parentLabelPadding,\n      H = void 0 === D ? Q.parentLabelPadding : D,\n      V = e.colors,\n      q = void 0 === V ? Q.colors : V,\n      A = e.colorBy,\n      G = void 0 === A ? Q.colorBy : A,\n      J = e.nodeOpacity,\n      K = void 0 === J ? Q.nodeOpacity : J,\n      N = e.borderColor,\n      U = void 0 === N ? Q.borderColor : N,\n      Z = e.labelTextColor,\n      $ = void 0 === Z ? Q.labelTextColor : Z,\n      te = e.parentLabelTextColor,\n      oe = void 0 === te ? Q.parentLabelTextColor : te,\n      ne = d(r),\n      ie = d(p),\n      ae = b(c),\n      re = d(w),\n      le = d(R),\n      de = function (e) {\n        var t = e.width,\n          o = e.height,\n          i = e.tile,\n          a = e.innerPadding,\n          r = e.outerPadding,\n          l = e.enableParentLabel,\n          d = e.parentLabelSize,\n          b = e.parentLabelPosition,\n          u = e.leavesOnly;\n        return n(function () {\n          var e = O().size([t, o]).tile(_[i]).round(!0).paddingInner(a).paddingOuter(r);\n          if (l && !u) {\n            var n = d + 2 * r;\n            e[\"padding\" + C(b)](n);\n          }\n          return e;\n        }, [t, o, i, a, r, l, d, b, u]);\n      }({\n        width: o,\n        height: i,\n        tile: f,\n        innerPadding: g,\n        outerPadding: P,\n        enableParentLabel: z,\n        parentLabelSize: X,\n        parentLabelPosition: F,\n        leavesOnly: v\n      }),\n      be = ee({\n        root: t,\n        getValue: ie\n      }),\n      ue = n(function () {\n        var e = y(be);\n        return de(e), v ? e.leaves() : e.descendants();\n      }, [be, de, v]),\n      pe = n(function () {\n        return ue.map(function (e) {\n          var t = function (e, t) {\n              var o = e.ancestors().map(function (e) {\n                return t(e.data);\n              }).reverse();\n              return {\n                path: o.join(\".\"),\n                pathComponents: o\n              };\n            }(e, ne),\n            o = t.path,\n            n = t.pathComponents,\n            i = {\n              id: ne(e.data),\n              path: o,\n              pathComponents: n,\n              data: m(e.data, \"children\"),\n              x: e.x0,\n              y: e.y0,\n              width: e.x1 - e.x0,\n              height: e.y1 - e.y0,\n              value: e.value,\n              formattedValue: ae(e.value),\n              treeDepth: e.depth,\n              treeHeight: e.height,\n              isParent: e.height > 0,\n              isLeaf: 0 === e.height,\n              parentLabelX: 0,\n              parentLabelY: 0,\n              parentLabelRotation: 0\n            };\n          return i.labelRotation = k && i.height > i.width ? -90 : 0, \"top\" === F && (i.parentLabelX = P + H, i.parentLabelY = P + X / 2), \"right\" === F && (i.parentLabelX = i.width - P - X / 2, i.parentLabelY = i.height - P - H, i.parentLabelRotation = -90), \"bottom\" === F && (i.parentLabelX = P + H, i.parentLabelY = i.height - P - X / 2), \"left\" === F && (i.parentLabelX = P + X / 2, i.parentLabelY = i.height - P - H, i.parentLabelRotation = -90), i.label = re(i), i.parentLabel = le(i), i;\n        });\n      }, [ue, ne, ae, re, k, le, X, F, H, P]),\n      ce = l(),\n      se = T(q, G),\n      ve = W(U, ce),\n      he = W($, ce),\n      fe = W(oe, ce),\n      Le = n(function () {\n        return pe.map(function (e) {\n          var t = j({}, e, {\n            color: se(e),\n            opacity: K\n          });\n          return t.borderColor = ve(t), t.labelTextColor = he(t), t.parentLabelTextColor = fe(t), t;\n        });\n      }, [pe, se, K, ve, he, fe]);\n    return {\n      hierarchy: be,\n      nodes: Le,\n      layout: de\n    };\n  },\n  oe = function (e) {\n    var t = e.nodes;\n    return n(function () {\n      return {\n        nodes: t\n      };\n    }, [t]);\n  },\n  ne = function (e) {\n    return {\n      x: e.x,\n      y: e.y,\n      width: e.width,\n      height: e.height,\n      color: e.color,\n      labelX: e.width / 2,\n      labelY: e.height / 2,\n      labelRotation: e.labelRotation,\n      labelOpacity: 1,\n      parentLabelX: e.parentLabelX,\n      parentLabelY: e.parentLabelY,\n      parentLabelRotation: e.parentLabelRotation,\n      parentLabelOpacity: 1\n    };\n  },\n  ie = function (e) {\n    return {\n      x: e.x + e.width / 2,\n      y: e.y + e.height / 2,\n      width: 0,\n      height: 0,\n      color: e.color,\n      labelX: 0,\n      labelY: 0,\n      labelRotation: e.labelRotation,\n      labelOpacity: 0,\n      parentLabelX: 0,\n      parentLabelY: 0,\n      parentLabelRotation: e.parentLabelRotation,\n      parentLabelOpacity: 0\n    };\n  },\n  ae = e(function (e) {\n    var i = e.nodes,\n      a = e.nodeComponent,\n      r = e.borderWidth,\n      l = e.enableLabel,\n      d = e.labelSkipSize,\n      b = e.enableParentLabel,\n      p = function (e, i) {\n        var a = i.isInteractive,\n          r = i.onMouseEnter,\n          l = i.onMouseMove,\n          d = i.onMouseLeave,\n          b = i.onClick,\n          u = i.tooltip,\n          p = z(),\n          c = p.showTooltipFromEvent,\n          s = p.hideTooltip,\n          v = t(function (e, t) {\n            c(o(u, {\n              node: e\n            }), t, \"left\");\n          }, [c, u]),\n          h = t(function (e, t) {\n            v(e, t), null == r || r(e, t);\n          }, [r, v]),\n          f = t(function (e, t) {\n            v(e, t), null == l || l(e, t);\n          }, [l, v]),\n          L = t(function (e, t) {\n            s(), null == d || d(e, t);\n          }, [d, s]),\n          g = t(function (e, t) {\n            null == b || b(e, t);\n          }, [b]);\n        return n(function () {\n          return e.map(function (e) {\n            return a ? j({}, e, {\n              onMouseEnter: function (t) {\n                return h(e, t);\n              },\n              onMouseMove: function (t) {\n                return f(e, t);\n              },\n              onMouseLeave: function (t) {\n                return L(e, t);\n              },\n              onClick: function (t) {\n                return g(e, t);\n              }\n            }) : e;\n          });\n        }, [a, e, h, f, L, g]);\n      }(i, {\n        isInteractive: e.isInteractive,\n        onMouseEnter: e.onMouseEnter,\n        onMouseMove: e.onMouseMove,\n        onMouseLeave: e.onMouseLeave,\n        onClick: e.onClick,\n        tooltip: e.tooltip\n      }),\n      c = u(),\n      s = c.animate,\n      v = c.config,\n      h = E(p, {\n        keys: function (e) {\n          return e.path;\n        },\n        initial: ne,\n        from: ie,\n        enter: ne,\n        update: ne,\n        leave: ie,\n        config: v,\n        immediate: !s\n      });\n    return Y(F, {\n      children: h(function (e, t) {\n        return o(a, {\n          key: t.path,\n          node: t,\n          animatedProps: e,\n          borderWidth: r,\n          enableLabel: l,\n          labelSkipSize: d,\n          enableParentLabel: b\n        });\n      })\n    });\n  }),\n  re = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  le = function (e) {\n    var t = e.data,\n      n = e.identity,\n      a = void 0 === n ? U.identity : n,\n      r = e.value,\n      l = void 0 === r ? U.value : r,\n      d = e.valueFormat,\n      b = e.tile,\n      u = void 0 === b ? U.tile : b,\n      p = e.nodeComponent,\n      h = void 0 === p ? U.nodeComponent : p,\n      f = e.innerPadding,\n      L = void 0 === f ? U.innerPadding : f,\n      g = e.outerPadding,\n      m = void 0 === g ? U.outerPadding : g,\n      y = e.leavesOnly,\n      C = void 0 === y ? U.leavesOnly : y,\n      x = e.width,\n      P = e.height,\n      M = e.margin,\n      w = e.layers,\n      S = void 0 === w ? U.layers : w,\n      O = e.colors,\n      k = void 0 === O ? U.colors : O,\n      T = e.colorBy,\n      W = void 0 === T ? U.colorBy : T,\n      I = e.nodeOpacity,\n      z = void 0 === I ? U.nodeOpacity : I,\n      B = e.borderWidth,\n      R = void 0 === B ? U.borderWidth : B,\n      E = e.borderColor,\n      X = void 0 === E ? U.borderColor : E,\n      F = e.defs,\n      j = void 0 === F ? U.defs : F,\n      D = e.fill,\n      H = void 0 === D ? U.fill : D,\n      V = e.enableLabel,\n      q = void 0 === V ? U.enableLabel : V,\n      A = e.label,\n      G = void 0 === A ? U.label : A,\n      J = e.labelTextColor,\n      K = void 0 === J ? U.labelTextColor : J,\n      N = e.orientLabel,\n      Q = void 0 === N ? U.orientLabel : N,\n      Z = e.labelSkipSize,\n      $ = void 0 === Z ? U.labelSkipSize : Z,\n      _ = e.enableParentLabel,\n      ee = void 0 === _ ? U.enableParentLabel : _,\n      ne = e.parentLabel,\n      ie = void 0 === ne ? U.parentLabel : ne,\n      re = e.parentLabelSize,\n      le = void 0 === re ? U.parentLabelSize : re,\n      de = e.parentLabelPosition,\n      be = void 0 === de ? U.parentLabelPosition : de,\n      ue = e.parentLabelPadding,\n      pe = void 0 === ue ? U.parentLabelPadding : ue,\n      ce = e.parentLabelTextColor,\n      se = void 0 === ce ? U.parentLabelTextColor : ce,\n      ve = e.isInteractive,\n      he = void 0 === ve ? U.isInteractive : ve,\n      fe = e.onMouseEnter,\n      Le = e.onMouseMove,\n      ge = e.onMouseLeave,\n      me = e.onClick,\n      ye = e.tooltip,\n      Ce = void 0 === ye ? U.tooltip : ye,\n      xe = e.role,\n      Pe = e.ariaLabel,\n      Me = e.ariaLabelledBy,\n      we = e.ariaDescribedBy,\n      Se = c(x, P, M),\n      Oe = Se.margin,\n      ke = Se.innerWidth,\n      Te = Se.innerHeight,\n      We = Se.outerWidth,\n      Ie = Se.outerHeight,\n      ze = te({\n        data: t,\n        identity: a,\n        value: l,\n        valueFormat: d,\n        leavesOnly: C,\n        width: ke,\n        height: Te,\n        tile: u,\n        innerPadding: L,\n        outerPadding: m,\n        colors: k,\n        colorBy: W,\n        nodeOpacity: z,\n        borderColor: X,\n        label: G,\n        labelTextColor: K,\n        orientLabel: Q,\n        enableParentLabel: ee,\n        parentLabel: ie,\n        parentLabelSize: le,\n        parentLabelPosition: be,\n        parentLabelPadding: pe,\n        parentLabelTextColor: se\n      }).nodes,\n      Be = {\n        nodes: null\n      };\n    S.includes(\"nodes\") && (Be.nodes = Y(ae, {\n      nodes: ze,\n      nodeComponent: h,\n      borderWidth: R,\n      enableLabel: q,\n      labelSkipSize: $,\n      enableParentLabel: ee,\n      isInteractive: he,\n      onMouseEnter: fe,\n      onMouseMove: Le,\n      onMouseLeave: ge,\n      onClick: me,\n      tooltip: Ce\n    }, \"nodes\"));\n    var Re = oe({\n        nodes: ze\n      }),\n      Ee = s(j, ze, H);\n    return Y(v, {\n      width: We,\n      height: Ie,\n      margin: Oe,\n      defs: Ee,\n      role: xe,\n      ariaLabel: Pe,\n      ariaLabelledBy: Me,\n      ariaDescribedBy: we,\n      children: S.map(function (e, t) {\n        var n;\n        return \"function\" == typeof e ? Y(i, {\n          children: o(e, Re)\n        }, t) : null != (n = null == Be ? void 0 : Be[e]) ? n : null;\n      })\n    });\n  },\n  de = function (e) {\n    var t = e.isInteractive,\n      o = void 0 === t ? U.isInteractive : t,\n      n = e.animate,\n      i = void 0 === n ? U.animate : n,\n      a = e.motionConfig,\n      r = void 0 === a ? U.motionConfig : a,\n      l = e.theme,\n      d = e.renderWrapper,\n      b = D(e, re);\n    return Y(p, {\n      animate: i,\n      isInteractive: o,\n      motionConfig: r,\n      renderWrapper: d,\n      theme: l,\n      children: Y(le, j({\n        isInteractive: o\n      }, b))\n    });\n  },\n  be = function (e) {\n    return Y(h, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return Y(de, j({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  },\n  ue = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  pe = function (e) {\n    var t = e.data,\n      n = e.identity,\n      a = void 0 === n ? Z.identity : n,\n      r = e.value,\n      l = void 0 === r ? Z.value : r,\n      d = e.tile,\n      b = void 0 === d ? Z.tile : d,\n      u = e.nodeComponent,\n      p = void 0 === u ? Z.nodeComponent : u,\n      s = e.valueFormat,\n      v = e.innerPadding,\n      h = void 0 === v ? Z.innerPadding : v,\n      f = e.outerPadding,\n      L = void 0 === f ? Z.outerPadding : f,\n      g = e.leavesOnly,\n      m = void 0 === g ? Z.leavesOnly : g,\n      y = e.width,\n      C = e.height,\n      x = e.margin,\n      P = e.layers,\n      M = void 0 === P ? U.layers : P,\n      w = e.colors,\n      S = void 0 === w ? Z.colors : w,\n      O = e.colorBy,\n      k = void 0 === O ? Z.colorBy : O,\n      T = e.nodeOpacity,\n      W = void 0 === T ? Z.nodeOpacity : T,\n      I = e.borderWidth,\n      z = void 0 === I ? Z.borderWidth : I,\n      B = e.borderColor,\n      R = void 0 === B ? Z.borderColor : B,\n      E = e.enableLabel,\n      X = void 0 === E ? Z.enableLabel : E,\n      F = e.label,\n      j = void 0 === F ? Z.label : F,\n      D = e.labelTextColor,\n      H = void 0 === D ? Z.labelTextColor : D,\n      V = e.orientLabel,\n      q = void 0 === V ? Z.orientLabel : V,\n      A = e.labelSkipSize,\n      G = void 0 === A ? Z.labelSkipSize : A,\n      J = e.enableParentLabel,\n      K = void 0 === J ? Z.enableParentLabel : J,\n      N = e.parentLabel,\n      Q = void 0 === N ? Z.parentLabel : N,\n      $ = e.parentLabelSize,\n      _ = void 0 === $ ? Z.parentLabelSize : $,\n      ee = e.parentLabelPosition,\n      ne = void 0 === ee ? Z.parentLabelPosition : ee,\n      ie = e.parentLabelPadding,\n      re = void 0 === ie ? Z.parentLabelPadding : ie,\n      le = e.parentLabelTextColor,\n      de = void 0 === le ? Z.parentLabelTextColor : le,\n      be = e.isInteractive,\n      ue = void 0 === be ? Z.isInteractive : be,\n      pe = e.onMouseEnter,\n      ce = e.onMouseMove,\n      se = e.onMouseLeave,\n      ve = e.onClick,\n      he = e.tooltip,\n      fe = void 0 === he ? Z.tooltip : he,\n      Le = e.role,\n      ge = e.ariaLabel,\n      me = e.ariaLabelledBy,\n      ye = e.ariaDescribedBy,\n      Ce = c(y, C, x),\n      xe = Ce.margin,\n      Pe = Ce.innerWidth,\n      Me = Ce.innerHeight,\n      we = Ce.outerWidth,\n      Se = Ce.outerHeight,\n      Oe = te({\n        data: t,\n        identity: a,\n        value: l,\n        valueFormat: s,\n        leavesOnly: m,\n        width: Pe,\n        height: Me,\n        tile: b,\n        innerPadding: h,\n        outerPadding: L,\n        colors: S,\n        colorBy: k,\n        nodeOpacity: W,\n        borderColor: R,\n        label: j,\n        labelTextColor: H,\n        orientLabel: q,\n        enableParentLabel: K,\n        parentLabel: Q,\n        parentLabelSize: _,\n        parentLabelPosition: ne,\n        parentLabelPadding: re,\n        parentLabelTextColor: de\n      }).nodes,\n      ke = {\n        nodes: null\n      };\n    M.includes(\"nodes\") && (ke.nodes = Y(ae, {\n      nodes: Oe,\n      nodeComponent: p,\n      borderWidth: z,\n      enableLabel: X,\n      labelSkipSize: G,\n      enableParentLabel: K,\n      isInteractive: ue,\n      onMouseEnter: pe,\n      onMouseMove: ce,\n      onMouseLeave: se,\n      onClick: ve,\n      tooltip: fe\n    }, \"nodes\"));\n    var Te = oe({\n      nodes: Oe\n    });\n    return Y(\"div\", {\n      role: Le,\n      \"aria-label\": ge,\n      \"aria-labelledby\": me,\n      \"aria-describedby\": ye,\n      style: {\n        position: \"relative\",\n        width: we,\n        height: Se\n      },\n      children: Y(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: xe.top,\n          left: xe.left\n        },\n        children: M.map(function (e, t) {\n          var n;\n          return \"function\" == typeof e ? Y(i, {\n            children: o(e, Te)\n          }, t) : null != (n = null == ke ? void 0 : ke[e]) ? n : null;\n        })\n      })\n    });\n  },\n  ce = function (e) {\n    var t = e.isInteractive,\n      o = void 0 === t ? Z.isInteractive : t,\n      n = e.animate,\n      i = void 0 === n ? Z.animate : n,\n      a = e.motionConfig,\n      r = void 0 === a ? Z.motionConfig : a,\n      l = e.theme,\n      d = e.renderWrapper,\n      b = D(e, ue);\n    return Y(p, {\n      animate: i,\n      isInteractive: o,\n      motionConfig: r,\n      renderWrapper: d,\n      theme: l,\n      children: Y(pe, j({\n        isInteractive: o\n      }, b))\n    });\n  },\n  se = function (e) {\n    return Y(h, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return Y(ce, j({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  },\n  ve = [\"theme\", \"isInteractive\", \"animate\", \"motionConfig\", \"renderWrapper\"],\n  he = function (e, t, o, n) {\n    return e.find(function (e) {\n      return g(e.x + t.left, e.y + t.top, e.width, e.height, o, n);\n    });\n  },\n  fe = function (e) {\n    var n = e.data,\n      i = e.identity,\n      d = void 0 === i ? $.identity : i,\n      b = e.value,\n      u = void 0 === b ? $.identity : b,\n      p = e.tile,\n      s = void 0 === p ? $.tile : p,\n      v = e.valueFormat,\n      h = e.innerPadding,\n      g = void 0 === h ? $.innerPadding : h,\n      m = e.outerPadding,\n      y = void 0 === m ? $.outerPadding : m,\n      C = e.leavesOnly,\n      x = void 0 === C ? $.leavesOnly : C,\n      P = e.width,\n      M = e.height,\n      w = e.margin,\n      S = e.colors,\n      O = void 0 === S ? $.colors : S,\n      k = e.colorBy,\n      T = void 0 === k ? $.colorBy : k,\n      W = e.nodeOpacity,\n      I = void 0 === W ? $.nodeOpacity : W,\n      B = e.borderWidth,\n      R = void 0 === B ? $.borderWidth : B,\n      E = e.borderColor,\n      X = void 0 === E ? $.borderColor : E,\n      F = e.enableLabel,\n      j = void 0 === F ? $.enableLabel : F,\n      D = e.label,\n      H = void 0 === D ? $.label : D,\n      V = e.labelTextColor,\n      q = void 0 === V ? $.labelTextColor : V,\n      A = e.orientLabel,\n      G = void 0 === A ? $.orientLabel : A,\n      J = e.labelSkipSize,\n      K = void 0 === J ? $.labelSkipSize : J,\n      N = e.isInteractive,\n      Q = void 0 === N ? $.isInteractive : N,\n      U = e.onMouseMove,\n      Z = e.onClick,\n      _ = e.tooltip,\n      ee = void 0 === _ ? $.tooltip : _,\n      oe = e.pixelRatio,\n      ne = void 0 === oe ? $.pixelRatio : oe,\n      ie = e.role,\n      ae = e.ariaLabel,\n      re = e.ariaLabelledBy,\n      le = e.ariaDescribedBy,\n      de = a(null),\n      be = c(P, M, w),\n      ue = be.margin,\n      pe = be.innerWidth,\n      ce = be.innerHeight,\n      se = be.outerWidth,\n      ve = be.outerHeight,\n      fe = te({\n        data: n,\n        identity: d,\n        value: u,\n        valueFormat: v,\n        leavesOnly: x,\n        width: pe,\n        height: ce,\n        tile: s,\n        innerPadding: g,\n        outerPadding: y,\n        colors: O,\n        colorBy: T,\n        nodeOpacity: I,\n        borderColor: X,\n        label: H,\n        labelTextColor: q,\n        orientLabel: G,\n        enableParentLabel: !1\n      }).nodes,\n      Le = l();\n    r(function () {\n      if (null !== de.current) {\n        var e = de.current.getContext(\"2d\");\n        null !== e && (de.current.width = se * ne, de.current.height = ve * ne, e.scale(ne, ne), e.fillStyle = Le.background, e.fillRect(0, 0, se, ve), e.translate(ue.left, ue.top), fe.forEach(function (t) {\n          e.fillStyle = t.color, e.fillRect(t.x, t.y, t.width, t.height), R > 0 && (e.strokeStyle = t.borderColor, e.lineWidth = R, e.strokeRect(t.x, t.y, t.width, t.height));\n        }), j && (e.textAlign = \"center\", e.textBaseline = \"middle\", e.font = Le.labels.text.fontSize + \"px \" + Le.labels.text.fontFamily, fe.forEach(function (t) {\n          if (t.isLeaf && (0 === K || Math.min(t.width, t.height) > K)) {\n            var o = G && t.height > t.width;\n            e.save(), e.translate(t.x + t.width / 2, t.y + t.height / 2), e.rotate(f(o ? -90 : 0)), e.fillStyle = t.labelTextColor, e.fillText(\"\" + t.label, 0, 0), e.restore();\n          }\n        })));\n      }\n    }, [de, fe, se, ve, pe, ce, ue, R, j, G, K, Le, ne]);\n    var ge = z(),\n      me = ge.showTooltipFromEvent,\n      ye = ge.hideTooltip,\n      Ce = t(function (e) {\n        if (null !== de.current) {\n          var t = L(de.current, e),\n            n = t[0],\n            i = t[1],\n            a = he(fe, ue, n, i);\n          void 0 !== a ? (me(o(ee, {\n            node: a\n          }), e, \"left\"), null == U || U(a, e)) : ye();\n        }\n      }, [de, fe, ue, me, ye, ee, U]),\n      xe = t(function () {\n        ye();\n      }, [ye]),\n      Pe = t(function (e) {\n        if (null !== de.current) {\n          var t = L(de.current, e),\n            o = t[0],\n            n = t[1],\n            i = he(fe, ue, o, n);\n          void 0 !== i && (null == Z || Z(i, e));\n        }\n      }, [de, fe, ue, Z]);\n    return Y(\"canvas\", {\n      ref: de,\n      width: se * ne,\n      height: ve * ne,\n      style: {\n        width: se,\n        height: ve\n      },\n      onMouseEnter: Q ? Ce : void 0,\n      onMouseMove: Q ? Ce : void 0,\n      onMouseLeave: Q ? xe : void 0,\n      onClick: Q ? Pe : void 0,\n      role: ie,\n      \"aria-label\": ae,\n      \"aria-labelledby\": re,\n      \"aria-describedby\": le\n    });\n  },\n  Le = function (e) {\n    var t = e.theme,\n      o = e.isInteractive,\n      n = void 0 === o ? $.isInteractive : o,\n      i = e.animate,\n      a = void 0 === i ? $.animate : i,\n      r = e.motionConfig,\n      l = void 0 === r ? $.motionConfig : r,\n      d = e.renderWrapper,\n      b = D(e, ve);\n    return Y(p, {\n      isInteractive: n,\n      animate: a,\n      motionConfig: l,\n      theme: t,\n      renderWrapper: d,\n      children: Y(fe, j({\n        isInteractive: n\n      }, b))\n    });\n  },\n  ge = function (e) {\n    return Y(h, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return Y(Le, j({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  };\nexport { be as ResponsiveTreeMap, ge as ResponsiveTreeMapCanvas, se as ResponsiveTreeMapHtml, de as TreeMap, Le as TreeMapCanvas, ce as TreeMapHtml, $ as canvasDefaultProps, Q as commonDefaultProps, Z as htmlDefaultProps, A as htmlLabelTransform, V as htmlNodeTransform, G as htmlParentLabelTransform, U as svgDefaultProps, q as svgLabelTransform, H as svgNodeTransform, _ as tileByType };","map":{"version":3,"names":["H","svgNodeTransform","e","t","B","V","htmlNodeTransform","q","svgLabelTransform","o","A","htmlLabelTransform","G","htmlParentLabelTransform","J","node","animatedProps","n","borderWidth","i","enableLabel","a","enableParentLabel","r","labelSkipSize","d","l","b","isLeaf","Math","min","width","height","u","isParent","X","R","g","transform","x","y","children","Y","rect","id","max","fill","color","strokeWidth","stroke","borderColor","fillOpacity","opacity","onMouseEnter","onMouseMove","onMouseLeave","onClick","text","textAnchor","dominantBaseline","style","j","labels","labelTextColor","pointerEvents","labelOpacity","labelX","labelY","labelRotation","label","parentLabelTextColor","parentLabelOpacity","parentLabelX","parentLabelY","parentLabelRotation","parentLabel","K","I","value","formattedValue","enableChip","N","div","path","replace","boxSizing","position","top","left","borderStyle","overflow","background","span","display","justifyContent","alignItems","whiteSpace","transformOrigin","Q","layers","identity","tile","leavesOnly","innerPadding","outerPadding","colors","scheme","colorBy","nodeOpacity","from","modifiers","orientLabel","parentLabelSize","parentLabelPosition","parentLabelPadding","isInteractive","tooltip","role","animate","motionConfig","U","nodeComponent","defs","Z","$","pixelRatio","window","devicePixelRatio","_","binary","dice","P","slice","M","sliceDice","w","squarify","S","ee","useHierarchy","root","getValue","k","sum","te","useTreeMap","data","p","c","valueFormat","s","v","h","f","L","z","E","F","D","oe","ne","ie","ae","re","le","de","O","size","round","paddingInner","paddingOuter","C","be","ue","leaves","descendants","pe","map","ancestors","reverse","join","pathComponents","m","x0","y0","x1","y1","treeDepth","depth","treeHeight","ce","se","T","ve","W","he","fe","Le","hierarchy","nodes","layout","useCustomLayerProps","getAnimatedNodeProps","getEndingAnimatedNodeProps","showTooltipFromEvent","hideTooltip","config","keys","initial","enter","update","leave","immediate","key","InnerTreeMap","margin","ge","me","ye","Ce","xe","Pe","ariaLabel","Me","ariaLabelledBy","we","ariaDescribedBy","Se","Oe","ke","innerWidth","Te","innerHeight","We","outerWidth","Ie","outerHeight","ze","Be","includes","Re","Ee","TreeMap","theme","renderWrapper","ResponsiveTreeMap","InnerTreeMapHtml","TreeMapHtml","ResponsiveTreeMapHtml","findNodeUnderCursor","find","InnerTreeMapCanvas","current","getContext","scale","fillStyle","fillRect","translate","forEach","strokeStyle","lineWidth","strokeRect","textAlign","textBaseline","font","fontSize","fontFamily","save","rotate","fillText","restore","ref","TreeMapCanvas","ResponsiveTreeMapCanvas","canvasDefaultProps","commonDefaultProps","htmlDefaultProps","svgDefaultProps","tileByType"],"sources":["C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\transitions.ts","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapNode.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapNodeTooltip.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapHtmlNode.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\defaults.ts","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\tiling.ts","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\hooks.ts","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapNodes.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMap.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\ResponsiveTreeMap.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapHtml.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\ResponsiveTreeMapHtml.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\TreeMapCanvas.tsx","C:\\Users\\Admin\\Desktop\\StockMarket\\stock\\node_modules\\@nivo\\treemap\\src\\ResponsiveTreeMapCanvas.tsx"],"sourcesContent":["import { to, SpringValue } from '@react-spring/web'\n\nexport const svgNodeTransform = (x: SpringValue<number>, y: SpringValue<number>) =>\n    to([x, y], (x, y) => `translate(${x},${y})`)\n\nexport const htmlNodeTransform = (x: SpringValue<number>, y: SpringValue<number>) =>\n    to([x, y], (x, y) => `translate(${x}px, ${y}px)`)\n\nexport const svgLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) => to([x, y, rotation], (x, y, rotation) => `translate(${x},${y}) rotate(${rotation})`)\n\nexport const htmlLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) => to([x, y, rotation], (x, y, rotation) => `translate(${x}px,${y}px) rotate(${rotation}deg)`)\n\nexport const htmlParentLabelTransform = (\n    x: SpringValue<number>,\n    y: SpringValue<number>,\n    rotation: SpringValue<number>\n) =>\n    to(\n        [x, y, rotation],\n        (x, y, rotation) =>\n            `translate(${x - (rotation === 0 ? 0 : 5)}px,${\n                y - (rotation === 0 ? 5 : 0)\n            }px) rotate(${rotation}deg)`\n    )\n","import { memo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { NodeProps } from './types'\nimport { svgNodeTransform, svgLabelTransform } from './transitions'\n\nconst NonMemoizedTreeMapNode = <Datum extends object>({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}: NodeProps<Datum>) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.g transform={svgNodeTransform(animatedProps.x, animatedProps.y)}>\n            <animated.rect\n                data-testid={`node.${node.id}`}\n                width={to(animatedProps.width, v => Math.max(v, 0))}\n                height={to(animatedProps.height, v => Math.max(v, 0))}\n                fill={node.fill ? node.fill : animatedProps.color}\n                strokeWidth={borderWidth}\n                stroke={node.borderColor}\n                fillOpacity={node.opacity}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.text\n                    data-testid={`label.${node.id}`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.labelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.labelOpacity}\n                    transform={svgLabelTransform(\n                        animatedProps.labelX,\n                        animatedProps.labelY,\n                        animatedProps.labelRotation\n                    )}\n                >\n                    {node.label}\n                </animated.text>\n            )}\n            {showParentLabel && (\n                <animated.text\n                    data-testid={`parentLabel.${node.id}`}\n                    dominantBaseline=\"central\"\n                    style={{\n                        ...theme.labels.text,\n                        fill: node.parentLabelTextColor,\n                        pointerEvents: 'none',\n                    }}\n                    fillOpacity={animatedProps.parentLabelOpacity}\n                    transform={svgLabelTransform(\n                        animatedProps.parentLabelX,\n                        animatedProps.parentLabelY,\n                        animatedProps.parentLabelRotation\n                    )}\n                >\n                    {node.parentLabel}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n\nexport const TreeMapNode = memo(NonMemoizedTreeMapNode) as typeof NonMemoizedTreeMapNode\n","import { memo } from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { TooltipProps } from './types'\n\nconst NonMemoizedTreeMapNodeTooltip = <Datum extends object>({ node }: TooltipProps<Datum>) => (\n    <BasicTooltip id={node.id} value={node.formattedValue} enableChip={true} color={node.color} />\n)\n\nexport const TreeMapNodeTooltip = memo(\n    NonMemoizedTreeMapNodeTooltip\n) as typeof NonMemoizedTreeMapNodeTooltip\n","import { memo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { NodeProps } from './types'\nimport { htmlNodeTransform, htmlLabelTransform, htmlParentLabelTransform } from './transitions'\n\nconst NonMemoizedTreeMapHtmlNode = <Datum extends object>({\n    node,\n    animatedProps,\n    borderWidth,\n    enableLabel,\n    enableParentLabel,\n    labelSkipSize,\n}: NodeProps<Datum>) => {\n    const theme = useTheme()\n\n    const showLabel =\n        enableLabel &&\n        node.isLeaf &&\n        (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n    const showParentLabel = enableParentLabel && node.isParent\n\n    return (\n        <animated.div\n            data-testid={`node.${node.id}`}\n            id={node.path.replace(/[^\\w]/gi, '-')}\n            style={{\n                boxSizing: 'border-box',\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                transform: htmlNodeTransform(animatedProps.x, animatedProps.y),\n                width: animatedProps.width,\n                height: animatedProps.height,\n                borderWidth,\n                borderStyle: 'solid',\n                borderColor: node.borderColor,\n                overflow: 'hidden',\n            }}\n        >\n            <animated.div\n                style={{\n                    boxSizing: 'border-box',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    opacity: node.opacity,\n                    width: animatedProps.width,\n                    height: animatedProps.height,\n                    background: animatedProps.color,\n                }}\n                onMouseEnter={node.onMouseEnter}\n                onMouseMove={node.onMouseMove}\n                onMouseLeave={node.onMouseLeave}\n                onClick={node.onClick}\n            />\n            {showLabel && (\n                <animated.span\n                    data-testid={`label.${node.id}`}\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        top: -5,\n                        left: -5,\n                        width: 10,\n                        height: 10,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        color: node.labelTextColor,\n                        transformOrigin: 'center center',\n                        transform: htmlLabelTransform(\n                            animatedProps.labelX,\n                            animatedProps.labelY,\n                            animatedProps.labelRotation\n                        ),\n                        opacity: animatedProps.labelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.label}\n                </animated.span>\n            )}\n            {showParentLabel && (\n                <animated.span\n                    data-testid={`parentLabel.${node.id}`}\n                    style={{\n                        ...theme.labels.text,\n                        position: 'absolute',\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                        alignItems: 'center',\n                        whiteSpace: 'nowrap',\n                        width: 10,\n                        height: 10,\n                        color: node.parentLabelTextColor,\n                        transformOrigin: 'top left',\n                        transform: htmlParentLabelTransform(\n                            animatedProps.parentLabelX,\n                            animatedProps.parentLabelY,\n                            animatedProps.parentLabelRotation\n                        ),\n                        opacity: animatedProps.parentLabelOpacity,\n                        pointerEvents: 'none',\n                    }}\n                >\n                    {node.parentLabel}\n                </animated.span>\n            )}\n        </animated.div>\n    )\n}\n\nexport const TreeMapHtmlNode = memo(NonMemoizedTreeMapHtmlNode) as typeof NonMemoizedTreeMapHtmlNode\n","import { TreeMapCommonProps, DefaultTreeMapDatum, LayerId } from './types'\nimport { TreeMapNode } from './TreeMapNode'\nimport { TreeMapNodeTooltip } from './TreeMapNodeTooltip'\nimport { TreeMapHtmlNode } from './TreeMapHtmlNode'\n\nexport const commonDefaultProps: Omit<\n    TreeMapCommonProps<DefaultTreeMapDatum>,\n    | 'valueFormat'\n    | 'margin'\n    | 'theme'\n    | 'labelFormat'\n    | 'onMouseEnter'\n    | 'onMouseMove'\n    | 'onMouseLeave'\n    | 'onClick'\n    | 'renderWrapper'\n    | 'ariaLabel'\n    | 'ariaLabelledBy'\n    | 'ariaDescribedBy'\n> & {\n    layers: LayerId[]\n} = {\n    layers: ['nodes'],\n\n    identity: 'id',\n    value: 'value',\n\n    tile: 'squarify',\n    leavesOnly: false,\n    innerPadding: 0,\n    outerPadding: 0,\n\n    colors: { scheme: 'nivo' as const },\n    colorBy: 'pathComponents.1',\n    nodeOpacity: 0.33,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipSize: 0,\n    labelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n    orientLabel: true,\n\n    enableParentLabel: true,\n    parentLabel: 'id',\n    parentLabelSize: 20,\n    parentLabelPosition: 'top',\n    parentLabelPadding: 6,\n    parentLabelTextColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    borderWidth: 1,\n    borderColor: { from: 'color', modifiers: [['darker', 1]] },\n\n    isInteractive: true,\n    tooltip: TreeMapNodeTooltip,\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapNode,\n    defs: [],\n    fill: [],\n}\n\nexport const htmlDefaultProps = {\n    ...commonDefaultProps,\n    nodeComponent: TreeMapHtmlNode,\n}\n\nexport const canvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","import {\n    treemapBinary,\n    treemapDice,\n    treemapSlice,\n    treemapSliceDice,\n    treemapSquarify,\n} from 'd3-hierarchy'\n\nexport const tileByType = {\n    binary: treemapBinary,\n    dice: treemapDice,\n    slice: treemapSlice,\n    sliceDice: treemapSliceDice,\n    squarify: treemapSquarify,\n} as const\n\nexport type TileType = keyof typeof tileByType\n","import { createElement, useCallback, useMemo, MouseEvent } from 'react'\nimport omit from 'lodash/omit'\nimport cloneDeep from 'lodash/cloneDeep'\nimport startCase from 'lodash/startCase'\nimport {\n    treemap as d3Treemap,\n    hierarchy,\n    HierarchyNode,\n    HierarchyRectangularNode,\n} from 'd3-hierarchy'\nimport { useTheme, useValueFormatter, PropertyAccessor, usePropertyAccessor } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport { commonDefaultProps } from './defaults'\nimport {\n    DefaultTreeMapDatum,\n    TreeMapCommonProps,\n    TreeMapDataProps,\n    ComputedNode,\n    ComputedNodeWithoutStyles,\n    ComputedNodeWithHandlers,\n    CustomLayerProps,\n} from './types'\nimport { tileByType } from './tiling'\n\nexport const useTreeMapLayout = <Datum extends object>({\n    width,\n    height,\n    tile,\n    innerPadding,\n    outerPadding,\n    enableParentLabel,\n    parentLabelSize,\n    parentLabelPosition,\n    leavesOnly,\n}: {\n    width: number\n    height: number\n    tile: TreeMapCommonProps<Datum>['tile']\n    innerPadding: TreeMapCommonProps<Datum>['innerPadding']\n    outerPadding: TreeMapCommonProps<Datum>['outerPadding']\n    enableParentLabel: TreeMapCommonProps<Datum>['enableParentLabel']\n    parentLabelSize: TreeMapCommonProps<Datum>['parentLabelSize']\n    parentLabelPosition: TreeMapCommonProps<Datum>['parentLabelPosition']\n    leavesOnly: TreeMapCommonProps<Datum>['leavesOnly']\n}) =>\n    useMemo(() => {\n        const treemap = d3Treemap<Datum>()\n            .size([width, height])\n            .tile(tileByType[tile])\n            .round(true)\n            .paddingInner(innerPadding)\n            .paddingOuter(outerPadding)\n\n        if (enableParentLabel && !leavesOnly) {\n            const parentLabelPadding = parentLabelSize + outerPadding * 2\n            // @ts-ignore\n            treemap[`padding${startCase(parentLabelPosition)}`](parentLabelPadding)\n        }\n\n        return treemap\n    }, [\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    ])\n\nexport const useHierarchy = <Datum extends object>({\n    root,\n    getValue,\n}: {\n    root: Datum\n    getValue: (datum: Datum) => number\n}) => useMemo(() => hierarchy<Datum>(root).sum(getValue), [root, getValue])\n\nconst computeNodeIdAndPath = <Datum extends object>(\n    node: HierarchyNode<Datum>,\n    getIdentity: (node: Datum) => string\n) => {\n    const path = node\n        .ancestors()\n        .map(ancestor => getIdentity(ancestor.data))\n        .reverse()\n\n    return { path: path.join('.'), pathComponents: path }\n}\n\nexport const useTreeMap = <Datum extends object = DefaultTreeMapDatum>({\n    data,\n    width,\n    height,\n    identity = commonDefaultProps.identity as PropertyAccessor<Datum, string>,\n    value = commonDefaultProps.value as PropertyAccessor<Datum, number>,\n    valueFormat,\n    leavesOnly = commonDefaultProps.leavesOnly,\n    tile = commonDefaultProps.tile,\n    innerPadding = commonDefaultProps.innerPadding,\n    outerPadding = commonDefaultProps.outerPadding,\n    label = commonDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    orientLabel = commonDefaultProps.orientLabel,\n    enableParentLabel = commonDefaultProps.enableParentLabel,\n    parentLabel = commonDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = commonDefaultProps.parentLabelSize,\n    parentLabelPosition = commonDefaultProps.parentLabelPosition,\n    parentLabelPadding = commonDefaultProps.parentLabelPadding,\n    colors = commonDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = commonDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = commonDefaultProps.nodeOpacity,\n    borderColor = commonDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    labelTextColor = commonDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    parentLabelTextColor = commonDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n}: {\n    data: TreeMapDataProps<Datum>['data']\n    width: number\n    height: number\n    identity?: TreeMapCommonProps<Datum>['identity']\n    value?: TreeMapCommonProps<Datum>['value']\n    valueFormat?: TreeMapCommonProps<Datum>['valueFormat']\n    tile?: TreeMapCommonProps<Datum>['tile']\n    leavesOnly?: TreeMapCommonProps<Datum>['leavesOnly']\n    innerPadding?: TreeMapCommonProps<Datum>['innerPadding']\n    outerPadding?: TreeMapCommonProps<Datum>['outerPadding']\n    label?: TreeMapCommonProps<Datum>['label']\n    orientLabel?: TreeMapCommonProps<Datum>['orientLabel']\n    enableParentLabel?: TreeMapCommonProps<Datum>['enableParentLabel']\n    parentLabel?: TreeMapCommonProps<Datum>['parentLabel']\n    parentLabelSize?: TreeMapCommonProps<Datum>['parentLabelSize']\n    parentLabelPosition?: TreeMapCommonProps<Datum>['parentLabelPosition']\n    parentLabelPadding?: TreeMapCommonProps<Datum>['parentLabelPadding']\n    colors?: TreeMapCommonProps<Datum>['colors']\n    colorBy?: TreeMapCommonProps<Datum>['colorBy']\n    nodeOpacity?: TreeMapCommonProps<Datum>['nodeOpacity']\n    borderColor?: TreeMapCommonProps<Datum>['borderColor']\n    labelTextColor?: TreeMapCommonProps<Datum>['labelTextColor']\n    parentLabelTextColor?: TreeMapCommonProps<Datum>['parentLabelTextColor']\n}) => {\n    const getIdentity = usePropertyAccessor(identity)\n    const getValue = usePropertyAccessor(value)\n    const formatValue = useValueFormatter(valueFormat)\n    const getLabel = usePropertyAccessor(label)\n    const getParentLabel = usePropertyAccessor(parentLabel)\n\n    const layout = useTreeMapLayout<Datum>({\n        width,\n        height,\n        tile,\n        innerPadding,\n        outerPadding,\n        enableParentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        leavesOnly,\n    })\n\n    const hierarchy = useHierarchy<Datum>({ root: data, getValue })\n\n    const rawNodes = useMemo(() => {\n        // d3 treemap mutates the data, so we need to copy it\n        // to have proper behavior for subsequents useMemo()\n        const root = cloneDeep(hierarchy)\n        layout(root)\n\n        return (\n            leavesOnly ? root.leaves() : root.descendants()\n        ) as HierarchyRectangularNode<Datum>[]\n    }, [hierarchy, layout, leavesOnly])\n\n    const nodes = useMemo(\n        () =>\n            rawNodes.map(rawNode => {\n                const { path, pathComponents } = computeNodeIdAndPath(rawNode, getIdentity)\n\n                const node = {\n                    id: getIdentity(rawNode.data),\n                    path,\n                    pathComponents,\n                    data: omit(rawNode.data, 'children'),\n                    x: rawNode.x0,\n                    y: rawNode.y0,\n                    width: rawNode.x1 - rawNode.x0,\n                    height: rawNode.y1 - rawNode.y0,\n                    value: rawNode.value!,\n                    formattedValue: formatValue(rawNode.value!),\n                    treeDepth: rawNode.depth,\n                    treeHeight: rawNode.height,\n                    isParent: rawNode.height > 0,\n                    isLeaf: rawNode.height === 0,\n                    parentLabelX: 0,\n                    parentLabelY: 0,\n                    parentLabelRotation: 0,\n                } as ComputedNodeWithoutStyles<Datum>\n\n                node.labelRotation = orientLabel && node.height > node.width ? -90 : 0\n\n                if (parentLabelPosition === 'top') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = outerPadding + parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'right') {\n                    node.parentLabelX = node.width - outerPadding - parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n                if (parentLabelPosition === 'bottom') {\n                    node.parentLabelX = outerPadding + parentLabelPadding\n                    node.parentLabelY = node.height - outerPadding - parentLabelSize / 2\n                }\n                if (parentLabelPosition === 'left') {\n                    node.parentLabelX = outerPadding + parentLabelSize / 2\n                    node.parentLabelY = node.height - outerPadding - parentLabelPadding\n                    node.parentLabelRotation = -90\n                }\n\n                node.label = getLabel(node)\n                node.parentLabel = getParentLabel(node)\n\n                return node\n            }),\n        [\n            rawNodes,\n            getIdentity,\n            formatValue,\n            getLabel,\n            orientLabel,\n            getParentLabel,\n            parentLabelSize,\n            parentLabelPosition,\n            parentLabelPadding,\n            outerPadding,\n        ]\n    )\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n    const getParentLabelTextColor = useInheritedColor(parentLabelTextColor, theme)\n\n    const nodesWithStyles = useMemo(\n        () =>\n            nodes.map(node => {\n                const nodeWithStyles = {\n                    ...node,\n                    color: getColor(node),\n                    opacity: nodeOpacity,\n                } as ComputedNode<Datum>\n\n                nodeWithStyles.borderColor = getBorderColor(nodeWithStyles)\n                nodeWithStyles.labelTextColor = getLabelTextColor(nodeWithStyles)\n                nodeWithStyles.parentLabelTextColor = getParentLabelTextColor(nodeWithStyles)\n\n                return nodeWithStyles\n            }),\n        [nodes, getColor, nodeOpacity, getBorderColor, getLabelTextColor, getParentLabelTextColor]\n    )\n\n    return {\n        hierarchy,\n        nodes: nodesWithStyles,\n        layout,\n    }\n}\n\nexport const useInteractiveTreeMapNodes = <Datum extends object>(\n    nodes: ComputedNode<Datum>[],\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: {\n        isInteractive: TreeMapCommonProps<Datum>['isInteractive']\n        onMouseEnter?: TreeMapCommonProps<Datum>['onMouseEnter']\n        onMouseMove?: TreeMapCommonProps<Datum>['onMouseMove']\n        onMouseLeave?: TreeMapCommonProps<Datum>['onMouseLeave']\n        onClick?: TreeMapCommonProps<Datum>['onClick']\n        tooltip: TreeMapCommonProps<Datum>['tooltip']\n    }\n): ComputedNodeWithHandlers<Datum>[] => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n        },\n        [showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseEnter = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltip(node, event)\n            onMouseEnter?.(node, event)\n        },\n        [onMouseEnter, showTooltip]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            showTooltip(node, event)\n            onMouseMove?.(node, event)\n        },\n        [onMouseMove, showTooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [onMouseLeave, hideTooltip]\n    )\n\n    const handleClick = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            onClick?.(node, event)\n        },\n        [onClick]\n    )\n\n    return useMemo(\n        () =>\n            nodes.map(node => {\n                if (!isInteractive) return node\n\n                return {\n                    ...node,\n                    onMouseEnter: (event: MouseEvent) => handleMouseEnter(node, event),\n                    onMouseMove: (event: MouseEvent) => handleMouseMove(node, event),\n                    onMouseLeave: (event: MouseEvent) => handleMouseLeave(node, event),\n                    onClick: (event: MouseEvent) => handleClick(node, event),\n                }\n            }),\n        [isInteractive, nodes, handleMouseEnter, handleMouseMove, handleMouseLeave, handleClick]\n    )\n}\n\nexport const useCustomLayerProps = <Datum extends object>({\n    nodes,\n}: CustomLayerProps<Datum>): CustomLayerProps<Datum> =>\n    useMemo(\n        () => ({\n            nodes,\n        }),\n        [nodes]\n    )\n","import { createElement, memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { useInteractiveTreeMapNodes } from './hooks'\nimport {\n    ComputedNode,\n    TreeMapCommonProps,\n    NodeAnimatedProps,\n    NodeComponent,\n    ComputedNodeWithHandlers,\n} from './types'\n\nconst getAnimatedNodeProps = <Datum extends object>(\n    node: ComputedNodeWithHandlers<Datum>\n): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    width: node.width,\n    height: node.height,\n    color: node.color,\n    labelX: node.width / 2,\n    labelY: node.height / 2,\n    labelRotation: node.labelRotation,\n    labelOpacity: 1,\n    parentLabelX: node.parentLabelX,\n    parentLabelY: node.parentLabelY,\n    parentLabelRotation: node.parentLabelRotation,\n    parentLabelOpacity: 1,\n})\n\nconst getEndingAnimatedNodeProps = <Datum extends object>(\n    node: ComputedNodeWithHandlers<Datum>\n): NodeAnimatedProps => {\n    const x = node.x + node.width / 2\n    const y = node.y + node.height / 2\n\n    return {\n        x,\n        y,\n        width: 0,\n        height: 0,\n        color: node.color,\n        labelX: 0,\n        labelY: 0,\n        labelRotation: node.labelRotation,\n        labelOpacity: 0,\n        parentLabelX: 0,\n        parentLabelY: 0,\n        parentLabelRotation: node.parentLabelRotation,\n        parentLabelOpacity: 0,\n    }\n}\n\ninterface TreeMapNodesProps<Datum extends object> {\n    nodes: ComputedNode<Datum>[]\n    nodeComponent: NodeComponent<Datum>\n    borderWidth: TreeMapCommonProps<Datum>['borderWidth']\n    enableLabel: TreeMapCommonProps<Datum>['enableLabel']\n    labelSkipSize: TreeMapCommonProps<Datum>['labelSkipSize']\n    enableParentLabel: TreeMapCommonProps<Datum>['enableParentLabel']\n    isInteractive: TreeMapCommonProps<Datum>['isInteractive']\n    onMouseEnter?: TreeMapCommonProps<Datum>['onMouseEnter']\n    onMouseMove?: TreeMapCommonProps<Datum>['onMouseMove']\n    onMouseLeave?: TreeMapCommonProps<Datum>['onMouseLeave']\n    onClick?: TreeMapCommonProps<Datum>['onClick']\n    tooltip: TreeMapCommonProps<Datum>['tooltip']\n}\n\nconst NonMemoizedTreeMapNodes = <Datum extends object>({\n    nodes,\n    nodeComponent,\n    borderWidth,\n    enableLabel,\n    labelSkipSize,\n    enableParentLabel,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: TreeMapNodesProps<Datum>) => {\n    const nodesWithHandlers = useInteractiveTreeMapNodes<Datum>(nodes, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<ComputedNodeWithHandlers<Datum>, NodeAnimatedProps>(\n        nodesWithHandlers,\n        {\n            keys: node => node.path,\n            initial: getAnimatedNodeProps,\n            from: getEndingAnimatedNodeProps,\n            enter: getAnimatedNodeProps,\n            update: getAnimatedNodeProps,\n            leave: getEndingAnimatedNodeProps,\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((animatedProps, node) =>\n                createElement(nodeComponent, {\n                    key: node.path,\n                    node,\n                    animatedProps,\n                    borderWidth,\n                    enableLabel,\n                    labelSkipSize,\n                    enableParentLabel,\n                })\n            )}\n        </>\n    )\n}\n\nexport const TreeMapNodes = memo(NonMemoizedTreeMapNodes) as typeof NonMemoizedTreeMapNodes\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    SvgWrapper,\n    Container,\n    useDimensions,\n    // @ts-ignore\n    bindDefs,\n} from '@nivo/core'\nimport { useTreeMap, useCustomLayerProps } from './hooks'\nimport { TreeMapNodes } from './TreeMapNodes'\nimport {\n    DefaultTreeMapDatum,\n    NodeComponent,\n    TreeMapCommonProps,\n    TreeMapSvgProps,\n    LayerId,\n} from './types'\nimport { svgDefaultProps } from './defaults'\n\ntype InnerTreeMapProps<Datum extends object> = Omit<\n    TreeMapSvgProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMap = <Datum extends object>({\n    data,\n    identity = svgDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = svgDefaultProps.value as TreeMapCommonProps<Datum>['value'],\n    valueFormat,\n    tile = svgDefaultProps.tile,\n    nodeComponent = svgDefaultProps.nodeComponent as NodeComponent<Datum>,\n    innerPadding = svgDefaultProps.innerPadding,\n    outerPadding = svgDefaultProps.outerPadding,\n    leavesOnly = svgDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers as NonNullable<TreeMapSvgProps<Datum>['layers']>,\n    colors = svgDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = svgDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = svgDefaultProps.nodeOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    enableLabel = svgDefaultProps.enableLabel,\n    label = svgDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = svgDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = svgDefaultProps.orientLabel,\n    labelSkipSize = svgDefaultProps.labelSkipSize,\n    enableParentLabel = svgDefaultProps.enableParentLabel,\n    parentLabel = svgDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = svgDefaultProps.parentLabelSize,\n    parentLabelPosition = svgDefaultProps.parentLabelPosition,\n    parentLabelPadding = svgDefaultProps.parentLabelPadding,\n    parentLabelTextColor = svgDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n    isInteractive = svgDefaultProps.isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = svgDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapProps<Datum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        nodes: null,\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <TreeMapNodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    const customLayerProps = useCustomLayerProps<Datum>({ nodes })\n\n    const boundDefs = bindDefs(defs, nodes, fill)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const TreeMap = <Datum extends object = DefaultTreeMapDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: TreeMapSvgProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerTreeMap<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapSvgProps } from './types'\nimport { TreeMap } from './TreeMap'\n\nexport const ResponsiveTreeMap = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapSvgProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMap<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, useDimensions } from '@nivo/core'\nimport { useCustomLayerProps, useTreeMap } from './hooks'\nimport { TreeMapNodes } from './TreeMapNodes'\nimport { DefaultTreeMapDatum, TreeMapCommonProps, TreeMapHtmlProps, LayerId } from './types'\nimport { htmlDefaultProps, svgDefaultProps } from './defaults'\n\ntype InnerTreeMapHtmlProps<Datum extends object> = Omit<\n    TreeMapHtmlProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMapHtml = <Datum extends object>({\n    data,\n    identity = htmlDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = htmlDefaultProps.value as TreeMapCommonProps<Datum>['value'],\n    tile = htmlDefaultProps.tile,\n    nodeComponent = htmlDefaultProps.nodeComponent,\n    valueFormat,\n    innerPadding = htmlDefaultProps.innerPadding,\n    outerPadding = htmlDefaultProps.outerPadding,\n    leavesOnly = htmlDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    layers = svgDefaultProps.layers as NonNullable<TreeMapHtmlProps<Datum>['layers']>,\n    colors = htmlDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = htmlDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = htmlDefaultProps.nodeOpacity,\n    borderWidth = htmlDefaultProps.borderWidth,\n    borderColor = htmlDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    enableLabel = htmlDefaultProps.enableLabel,\n    label = htmlDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = htmlDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = htmlDefaultProps.orientLabel,\n    labelSkipSize = htmlDefaultProps.labelSkipSize,\n    enableParentLabel = htmlDefaultProps.enableParentLabel,\n    parentLabel = htmlDefaultProps.parentLabel as TreeMapCommonProps<Datum>['parentLabel'],\n    parentLabelSize = htmlDefaultProps.parentLabelSize,\n    parentLabelPosition = htmlDefaultProps.parentLabelPosition,\n    parentLabelPadding = htmlDefaultProps.parentLabelPadding,\n    parentLabelTextColor = htmlDefaultProps.parentLabelTextColor as TreeMapCommonProps<Datum>['parentLabelTextColor'],\n    isInteractive = htmlDefaultProps.isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip = htmlDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapHtmlProps<Datum>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel,\n        parentLabel,\n        parentLabelSize,\n        parentLabelPosition,\n        parentLabelPadding,\n        parentLabelTextColor,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        nodes: null,\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <TreeMapNodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                borderWidth={borderWidth}\n                enableLabel={enableLabel}\n                labelSkipSize={labelSkipSize}\n                enableParentLabel={enableParentLabel}\n                isInteractive={isInteractive}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n            />\n        )\n    }\n\n    const customLayerProps = useCustomLayerProps<Datum>({ nodes })\n\n    return (\n        <div\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n            style={{\n                position: 'relative',\n                width: outerWidth,\n                height: outerHeight,\n            }}\n        >\n            <div style={{ position: 'absolute', top: margin.top, left: margin.left }}>\n                {layers.map((layer, i) => {\n                    if (typeof layer === 'function') {\n                        return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                    }\n\n                    return layerById?.[layer] ?? null\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport const TreeMapHtml = <Datum extends object = DefaultTreeMapDatum>({\n    isInteractive = htmlDefaultProps.isInteractive,\n    animate = htmlDefaultProps.animate,\n    motionConfig = htmlDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: TreeMapHtmlProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerTreeMapHtml<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapHtmlProps } from './types'\nimport { TreeMapHtml } from './TreeMapHtml'\n\nexport const ResponsiveTreeMapHtml = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapHtmlProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapHtml<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { createElement, useCallback, useEffect, useRef, MouseEvent } from 'react'\nimport {\n    degreesToRadians,\n    getRelativeCursor,\n    isCursorInRect,\n    Container,\n    useDimensions,\n    useTheme,\n    Margin,\n} from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useTreeMap } from './hooks'\nimport { ComputedNode, DefaultTreeMapDatum, TreeMapCanvasProps, TreeMapCommonProps } from './types'\nimport { canvasDefaultProps } from './defaults'\n\nconst findNodeUnderCursor = <Datum extends object>(\n    nodes: ComputedNode<Datum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\ntype InnerTreeMapCanvasProps<Datum extends object> = Omit<\n    TreeMapCanvasProps<Datum>,\n    'renderWrapper' | 'theme'\n>\n\nconst InnerTreeMapCanvas = <Datum extends object>({\n    data,\n    identity = canvasDefaultProps.identity as TreeMapCommonProps<Datum>['identity'],\n    value = canvasDefaultProps.identity as TreeMapCommonProps<Datum>['value'],\n    tile = canvasDefaultProps.tile,\n    valueFormat,\n    innerPadding = canvasDefaultProps.innerPadding,\n    outerPadding = canvasDefaultProps.outerPadding,\n    leavesOnly = canvasDefaultProps.leavesOnly,\n    width,\n    height,\n    margin: partialMargin,\n    colors = canvasDefaultProps.colors as TreeMapCommonProps<Datum>['colors'],\n    colorBy = canvasDefaultProps.colorBy as TreeMapCommonProps<Datum>['colorBy'],\n    nodeOpacity = canvasDefaultProps.nodeOpacity,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor = canvasDefaultProps.borderColor as TreeMapCommonProps<Datum>['borderColor'],\n    enableLabel = canvasDefaultProps.enableLabel,\n    label = canvasDefaultProps.label as TreeMapCommonProps<Datum>['label'],\n    labelTextColor = canvasDefaultProps.labelTextColor as TreeMapCommonProps<Datum>['labelTextColor'],\n    orientLabel = canvasDefaultProps.orientLabel,\n    labelSkipSize = canvasDefaultProps.labelSkipSize,\n    isInteractive = canvasDefaultProps.isInteractive,\n    onMouseMove,\n    onClick,\n    tooltip = canvasDefaultProps.tooltip as TreeMapCommonProps<Datum>['tooltip'],\n    pixelRatio = canvasDefaultProps.pixelRatio,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeMapCanvasProps<Datum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes } = useTreeMap<Datum>({\n        data,\n        identity,\n        value,\n        valueFormat,\n        leavesOnly,\n        width: innerWidth,\n        height: innerHeight,\n        tile,\n        innerPadding,\n        outerPadding,\n        colors,\n        colorBy,\n        nodeOpacity,\n        borderColor,\n        label,\n        labelTextColor,\n        orientLabel,\n        enableParentLabel: false,\n    })\n\n    const theme = useTheme()\n\n    useEffect(() => {\n        if (canvasEl.current === null) return\n\n        const ctx = canvasEl.current.getContext('2d')\n        if (ctx === null) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        nodes.forEach(node => {\n            ctx.fillStyle = node.color\n            ctx.fillRect(node.x, node.y, node.width, node.height)\n\n            if (borderWidth > 0) {\n                ctx.strokeStyle = node.borderColor\n                ctx.lineWidth = borderWidth\n                ctx.strokeRect(node.x, node.y, node.width, node.height)\n            }\n        })\n\n        if (enableLabel) {\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            nodes.forEach(node => {\n                const showLabel =\n                    node.isLeaf &&\n                    (labelSkipSize === 0 || Math.min(node.width, node.height) > labelSkipSize)\n\n                if (!showLabel) return\n\n                const rotate = orientLabel && node.height > node.width\n\n                ctx.save()\n                ctx.translate(node.x + node.width / 2, node.y + node.height / 2)\n                ctx.rotate(degreesToRadians(rotate ? -90 : 0))\n\n                ctx.fillStyle = node.labelTextColor\n                ctx.fillText(`${node.label}`, 0, 0)\n\n                ctx.restore()\n            })\n        }\n    }, [\n        canvasEl,\n        nodes,\n        outerWidth,\n        outerHeight,\n        innerWidth,\n        innerHeight,\n        margin,\n        borderWidth,\n        enableLabel,\n        orientLabel,\n        labelSkipSize,\n        theme,\n        pixelRatio,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node !== undefined) {\n                showTooltipFromEvent(createElement(tooltip, { node }), event, 'left')\n                onMouseMove?.(node, event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [canvasEl, nodes, margin, showTooltipFromEvent, hideTooltip, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<HTMLCanvasElement>) => {\n            if (canvasEl.current === null) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const node = findNodeUnderCursor(nodes, margin, x, y)\n\n            if (node === undefined) return\n\n            onClick?.(node, event)\n        },\n        [canvasEl, nodes, margin, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n        />\n    )\n}\n\nexport const TreeMapCanvas = <Datum extends object = DefaultTreeMapDatum>({\n    theme,\n    isInteractive = canvasDefaultProps.isInteractive,\n    animate = canvasDefaultProps.animate,\n    motionConfig = canvasDefaultProps.motionConfig,\n    renderWrapper,\n    ...otherProps\n}: TreeMapCanvasProps<Datum>) => (\n    <Container {...{ isInteractive, animate, motionConfig, theme, renderWrapper }}>\n        <InnerTreeMapCanvas<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { DefaultTreeMapDatum, TreeMapCanvasProps } from './types'\nimport { TreeMapCanvas } from './TreeMapCanvas'\n\nexport const ResponsiveTreeMapCanvas = <Datum extends object = DefaultTreeMapDatum>(\n    props: Omit<TreeMapCanvasProps<Datum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TreeMapCanvas<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,CAAA,GAAmB,SAAAC,CAACC,CAAA,EAAwBC,CAAA;IAAsB,OAC3EC,CAAA,CAAG,CAACF,CAAA,EAAGC,CAAA,GAAI,UAACD,CAAA,EAAGC,CAAA;MAAC,OAAkB,eAAAD,CAAA,SAAKC,CAAA,GAAC;IAAA,EAAI;EAAA;EAEnCE,CAAA,GAAoB,SAAAC,CAACJ,CAAA,EAAwBC,CAAA;IAAsB,OAC5EC,CAAA,CAAG,CAACF,CAAA,EAAGC,CAAA,GAAI,UAACD,CAAA,EAAGC,CAAA;MAAC,OAAkB,eAAAD,CAAA,YAAQC,CAAA,GAAC;IAAA,EAAM;EAAA;EAExCI,CAAA,GAAoB,SAAAC,CAC7BN,CAAA,EACAC,CAAA,EACAM,CAAA;IAA6B,OAC5BL,CAAA,CAAG,CAACF,CAAA,EAAGC,CAAA,EAAGM,CAAA,GAAW,UAACP,CAAA,EAAGC,CAAA,EAAGM,CAAA;MAAQ,sBAAkBP,CAAA,GAAC,MAAIC,CAAA,GAAC,cAAYM,CAAA,GAAQ;IAAA,EAAI;EAAA;EAE5EC,CAAA,GAAqB,SAAAC,CAC9BT,CAAA,EACAC,CAAA,EACAM,CAAA;IAA6B,OAC5BL,CAAA,CAAG,CAACF,CAAA,EAAGC,CAAA,EAAGM,CAAA,GAAW,UAACP,CAAA,EAAGC,CAAA,EAAGM,CAAA;MAAQ,sBAAkBP,CAAA,GAAC,QAAMC,CAAA,GAAC,gBAAcM,CAAA,GAAQ;IAAA,EAAO;EAAA;EAEnFG,CAAA,GAA2B,SAAAC,CACpCX,CAAA,EACAC,CAAA,EACAM,CAAA;IAA6B,OAE7BL,CAAA,CACI,CAACF,CAAA,EAAGC,CAAA,EAAGM,CAAA,GACP,UAACP,CAAA,EAAGC,CAAA,EAAGM,CAAA;MAAQ,OACE,gBAAAP,CAAA,IAAkB,MAAbO,CAAA,GAAiB,IAAI,MAAE,SACrCN,CAAA,IAAkB,MAAbM,CAAA,GAAiB,IAAI,MAAE,gBAClBA,CAAA,GAAQ;IAAA,EAC7B;EAAA;ECkDQK,CAAA,GAAcZ,CAAA,CA3EI,UAAHA,CAAA;IAOJ,IANpBC,CAAA,GAAID,CAAA,CAAJa,IAAA;MACAN,CAAA,GAAaP,CAAA,CAAbc,aAAA;MACAC,CAAA,GAAWf,CAAA,CAAXgB,WAAA;MACAC,CAAA,GAAWjB,CAAA,CAAXkB,WAAA;MACAC,CAAA,GAAiBnB,CAAA,CAAjBoB,iBAAA;MACAC,CAAA,GAAarB,CAAA,CAAbsB,aAAA;MAEMC,CAAA,GAAQC,CAAA;MAERC,CAAA,GACFR,CAAA,IACAhB,CAAA,CAAKyB,MAAA,KACc,MAAlBL,CAAA,IAAuBM,IAAA,CAAKC,GAAA,CAAI3B,CAAA,CAAK4B,KAAA,EAAO5B,CAAA,CAAK6B,MAAA,IAAUT,CAAA;MAE1DU,CAAA,GAAkBZ,CAAA,IAAqBlB,CAAA,CAAK+B,QAAA;IAElD,OACIC,CAAA,CAACC,CAAA,CAASC,CAAA,EAAC;MAACC,SAAA,EAAWtC,CAAA,CAAiBS,CAAA,CAAc8B,CAAA,EAAG9B,CAAA,CAAc+B,CAAA;MAAGC,QAAA,EACtE,CAAAC,CAAA,CAACN,CAAA,CAASO,IAAA,EAAI;QACV,eAAqB,UAAAxC,CAAA,CAAKyC,EAAA;QAC1Bb,KAAA,EAAO3B,CAAA,CAAGK,CAAA,CAAcsB,KAAA,EAAO,UAAA7B,CAAA;UAAC,OAAI2B,IAAA,CAAKgB,GAAA,CAAI3C,CAAA,EAAG;QAAA;QAChD8B,MAAA,EAAQ5B,CAAA,CAAGK,CAAA,CAAcuB,MAAA,EAAQ,UAAA9B,CAAA;UAAC,OAAI2B,IAAA,CAAKgB,GAAA,CAAI3C,CAAA,EAAG;QAAA;QAClD4C,IAAA,EAAM3C,CAAA,CAAK2C,IAAA,GAAO3C,CAAA,CAAK2C,IAAA,GAAOrC,CAAA,CAAcsC,KAAA;QAC5CC,WAAA,EAAa/B,CAAA;QACbgC,MAAA,EAAQ9C,CAAA,CAAK+C,WAAA;QACbC,WAAA,EAAahD,CAAA,CAAKiD,OAAA;QAClBC,YAAA,EAAclD,CAAA,CAAKkD,YAAA;QACnBC,WAAA,EAAanD,CAAA,CAAKmD,WAAA;QAClBC,YAAA,EAAcpD,CAAA,CAAKoD,YAAA;QACnBC,OAAA,EAASrD,CAAA,CAAKqD;MAAA,IAEjB7B,CAAA,IACGe,CAAA,CAACN,CAAA,CAASqB,IAAA,EAAI;QACV,eAAsB,WAAAtD,CAAA,CAAKyC,EAAA;QAC3Bc,UAAA,EAAW;QACXC,gBAAA,EAAiB;QACjBC,KAAA,EAAKC,CAAA,KACEpC,CAAA,CAAMqC,MAAA,CAAOL,IAAA,EAAI;UACpBX,IAAA,EAAM3C,CAAA,CAAK4D,cAAA;UACXC,aAAA,EAAe;QAAA;QAEnBb,WAAA,EAAa1C,CAAA,CAAcwD,YAAA;QAC3B3B,SAAA,EAAW/B,CAAA,CACPE,CAAA,CAAcyD,MAAA,EACdzD,CAAA,CAAc0D,MAAA,EACd1D,CAAA,CAAc2D,aAAA;QAChB3B,QAAA,EAEDtC,CAAA,CAAKkE;MAAA,IAGbpC,CAAA,IACGS,CAAA,CAACN,CAAA,CAASqB,IAAA,EAAI;QACV,eAA4B,iBAAAtD,CAAA,CAAKyC,EAAA;QACjCe,gBAAA,EAAiB;QACjBC,KAAA,EAAKC,CAAA,KACEpC,CAAA,CAAMqC,MAAA,CAAOL,IAAA,EAAI;UACpBX,IAAA,EAAM3C,CAAA,CAAKmE,oBAAA;UACXN,aAAA,EAAe;QAAA;QAEnBb,WAAA,EAAa1C,CAAA,CAAc8D,kBAAA;QAC3BjC,SAAA,EAAW/B,CAAA,CACPE,CAAA,CAAc+D,YAAA,EACd/D,CAAA,CAAcgE,YAAA,EACdhE,CAAA,CAAciE,mBAAA;QAChBjC,QAAA,EAEDtC,CAAA,CAAKwE;MAAA;IAAA,EAK1B;EAAA;ECvEaC,CAAA,GAAqB1E,CAAA,CAJI,UAAHA,CAAA;IAAA,IAA4BC,CAAA,GAAID,CAAA,CAAJa,IAAA;IAAI,OAC/D2B,CAAA,CAACmC,CAAA,EAAY;MAACjC,EAAA,EAAIzC,CAAA,CAAKyC,EAAA;MAAIkC,KAAA,EAAO3E,CAAA,CAAK4E,cAAA;MAAgBC,UAAA,GAAY;MAAMjC,KAAA,EAAO5C,CAAA,CAAK4C;IAAA,EAAS;EAAA;EC8GrFkC,CAAA,GAAkB/E,CAAA,CA7GI,UAAHA,CAAA;IAOR,IANpBC,CAAA,GAAID,CAAA,CAAJa,IAAA;MACAN,CAAA,GAAaP,CAAA,CAAbc,aAAA;MACAC,CAAA,GAAWf,CAAA,CAAXgB,WAAA;MACAC,CAAA,GAAWjB,CAAA,CAAXkB,WAAA;MACAC,CAAA,GAAiBnB,CAAA,CAAjBoB,iBAAA;MACAC,CAAA,GAAarB,CAAA,CAAbsB,aAAA;MAEMC,CAAA,GAAQC,CAAA;MAERC,CAAA,GACFR,CAAA,IACAhB,CAAA,CAAKyB,MAAA,KACc,MAAlBL,CAAA,IAAuBM,IAAA,CAAKC,GAAA,CAAI3B,CAAA,CAAK4B,KAAA,EAAO5B,CAAA,CAAK6B,MAAA,IAAUT,CAAA;MAE1DU,CAAA,GAAkBZ,CAAA,IAAqBlB,CAAA,CAAK+B,QAAA;IAElD,OACIC,CAAA,CAACC,CAAA,CAAS8C,GAAA,EAAG;MACT,eAAqB,UAAA/E,CAAA,CAAKyC,EAAA;MAC1BA,EAAA,EAAIzC,CAAA,CAAKgF,IAAA,CAAKC,OAAA,CAAQ,WAAW;MACjCxB,KAAA,EAAO;QACHyB,SAAA,EAAW;QACXC,QAAA,EAAU;QACVC,GAAA,EAAK;QACLC,IAAA,EAAM;QACNlD,SAAA,EAAWjC,CAAA,CAAkBI,CAAA,CAAc8B,CAAA,EAAG9B,CAAA,CAAc+B,CAAA;QAC5DT,KAAA,EAAOtB,CAAA,CAAcsB,KAAA;QACrBC,MAAA,EAAQvB,CAAA,CAAcuB,MAAA;QACtBd,WAAA,EAAAD,CAAA;QACAwE,WAAA,EAAa;QACbvC,WAAA,EAAa/C,CAAA,CAAK+C,WAAA;QAClBwC,QAAA,EAAU;MAAA;MACZjD,QAAA,EAEF,CAAAC,CAAA,CAACN,CAAA,CAAS8C,GAAA,EAAG;QACTtB,KAAA,EAAO;UACHyB,SAAA,EAAW;UACXC,QAAA,EAAU;UACVC,GAAA,EAAK;UACLC,IAAA,EAAM;UACNpC,OAAA,EAASjD,CAAA,CAAKiD,OAAA;UACdrB,KAAA,EAAOtB,CAAA,CAAcsB,KAAA;UACrBC,MAAA,EAAQvB,CAAA,CAAcuB,MAAA;UACtB2D,UAAA,EAAYlF,CAAA,CAAcsC;QAAA;QAE9BM,YAAA,EAAclD,CAAA,CAAKkD,YAAA;QACnBC,WAAA,EAAanD,CAAA,CAAKmD,WAAA;QAClBC,YAAA,EAAcpD,CAAA,CAAKoD,YAAA;QACnBC,OAAA,EAASrD,CAAA,CAAKqD;MAAA,IAEjB7B,CAAA,IACGe,CAAA,CAACN,CAAA,CAASwD,IAAA,EAAI;QACV,eAAsB,WAAAzF,CAAA,CAAKyC,EAAA;QAC3BgB,KAAA,EAAKC,CAAA,KACEpC,CAAA,CAAMqC,MAAA,CAAOL,IAAA,EAAI;UACpB6B,QAAA,EAAU;UACVO,OAAA,EAAS;UACTN,GAAA,GAAM;UACNC,IAAA,GAAO;UACPzD,KAAA,EAAO;UACPC,MAAA,EAAQ;UACR8D,cAAA,EAAgB;UAChBC,UAAA,EAAY;UACZC,UAAA,EAAY;UACZjD,KAAA,EAAO5C,CAAA,CAAK4D,cAAA;UACZkC,eAAA,EAAiB;UACjB3D,SAAA,EAAW5B,CAAA,CACPD,CAAA,CAAcyD,MAAA,EACdzD,CAAA,CAAc0D,MAAA,EACd1D,CAAA,CAAc2D,aAAA;UAElBhB,OAAA,EAAS3C,CAAA,CAAcwD,YAAA;UACvBD,aAAA,EAAe;QAAA;QACjBvB,QAAA,EAEDtC,CAAA,CAAKkE;MAAA,IAGbpC,CAAA,IACGS,CAAA,CAACN,CAAA,CAASwD,IAAA,EAAI;QACV,eAA4B,iBAAAzF,CAAA,CAAKyC,EAAA;QACjCgB,KAAA,EAAKC,CAAA,KACEpC,CAAA,CAAMqC,MAAA,CAAOL,IAAA,EAAI;UACpB6B,QAAA,EAAU;UACVO,OAAA,EAAS;UACTC,cAAA,EAAgB;UAChBC,UAAA,EAAY;UACZC,UAAA,EAAY;UACZjE,KAAA,EAAO;UACPC,MAAA,EAAQ;UACRe,KAAA,EAAO5C,CAAA,CAAKmE,oBAAA;UACZ2B,eAAA,EAAiB;UACjB3D,SAAA,EAAW1B,CAAA,CACPH,CAAA,CAAc+D,YAAA,EACd/D,CAAA,CAAcgE,YAAA,EACdhE,CAAA,CAAciE,mBAAA;UAElBtB,OAAA,EAAS3C,CAAA,CAAc8D,kBAAA;UACvBP,aAAA,EAAe;QAAA;QACjBvB,QAAA,EAEDtC,CAAA,CAAKwE;MAAA;IAAA,EAK1B;EAAA;EC5GauB,CAAA,GAgBT;IACAC,MAAA,EAAQ,CAAC;IAETC,QAAA,EAAU;IACVtB,KAAA,EAAO;IAEPuB,IAAA,EAAM;IACNC,UAAA,GAAY;IACZC,YAAA,EAAc;IACdC,YAAA,EAAc;IAEdC,MAAA,EAAQ;MAAEC,MAAA,EAAQ;IAAA;IAClBC,OAAA,EAAS;IACTC,WAAA,EAAa;IAEbxF,WAAA,GAAa;IACbiD,KAAA,EAAO;IACP7C,aAAA,EAAe;IACfuC,cAAA,EAAgB;MAAE8C,IAAA,EAAM;MAASC,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IACxDC,WAAA,GAAa;IAEbzF,iBAAA,GAAmB;IACnBqD,WAAA,EAAa;IACbqC,eAAA,EAAiB;IACjBC,mBAAA,EAAqB;IACrBC,kBAAA,EAAoB;IACpB5C,oBAAA,EAAsB;MAAEuC,IAAA,EAAM;MAASC,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IAE9D5F,WAAA,EAAa;IACbgC,WAAA,EAAa;MAAE2D,IAAA,EAAM;MAASC,SAAA,EAAW,CAAC,CAAC,UAAU;IAAA;IAErDK,aAAA,GAAe;IACfC,OAAA,EAASxC,CAAA;IAETyC,IAAA,EAAM;IAENC,OAAA,GAAS;IACTC,YAAA,EAAc;EAAA;EAGLC,CAAA,GAAe3D,CAAA,KACrBqC,CAAA,EAAkB;IACrBuB,aAAA,EAAe3G,CAAA;IACf4G,IAAA,EAAM;IACN5E,IAAA,EAAM;EAAA;EAGG6E,CAAA,GAAgB9D,CAAA,KACtBqC,CAAA,EAAkB;IACrBuB,aAAA,EAAexC;EAAA;EAGN2C,CAAA,GAAkB/D,CAAA,KACxBqC,CAAA,EAAkB;IACrB2B,UAAA,EAA8B,sBAAXC,MAAA,IAAyBA,MAAA,CAAOC,gBAAA,IAAwB;EAAA;ECnElEC,CAAA,GAAa;IACtBC,MAAA,EAAQ1F,CAAA;IACR2F,IAAA,EAAMC,CAAA;IACNC,KAAA,EAAOC,CAAA;IACPC,SAAA,EAAWC,CAAA;IACXC,QAAA,EAAUC;EAAA;EC4DDC,EAAA,GAAe,SAAAC,CAAHzI,CAAA;IAAA,IACrBC,CAAA,GAAID,CAAA,CAAJ0I,IAAA;MACAnI,CAAA,GAAQP,CAAA,CAAR2I,QAAA;IAAQ,OAIN5H,CAAA,CAAQ;MAAA,OAAM6H,CAAA,CAAiB3I,CAAA,EAAM4I,GAAA,CAAItI,CAAA,CAAS;IAAA,GAAE,CAACN,CAAA,EAAMM,CAAA,EAAU;EAAA;EAc9DuI,EAAA,GAAa,SAAAC,CAAH/I,CAAA;IAgDjB,IA/CFC,CAAA,GAAID,CAAA,CAAJgJ,IAAA;MACAzI,CAAA,GAAKP,CAAA,CAAL6B,KAAA;MACAZ,CAAA,GAAMjB,CAAA,CAAN8B,MAAA;MAAMX,CAAA,GAAAnB,CAAA,CACNkG,QAAA;MAAA7E,CAAA,QAAQ,MAAAF,CAAA,GAAG6E,CAAA,CAAmBE,QAAA,GAAQ/E,CAAA;MAAAY,CAAA,GAAA/B,CAAA,CACtC4E,KAAA;MAAAqE,CAAA,QAAK,MAAAlH,CAAA,GAAGiE,CAAA,CAAmBpB,KAAA,GAAK7C,CAAA;MAChCmH,CAAA,GAAWlJ,CAAA,CAAXmJ,WAAA;MAAWC,CAAA,GAAApJ,CAAA,CACXoG,UAAA;MAAAiD,CAAA,QAAU,MAAAD,CAAA,GAAGpD,CAAA,CAAmBI,UAAA,GAAUgD,CAAA;MAAAE,CAAA,GAAAtJ,CAAA,CAC1CmG,IAAA;MAAAoD,CAAA,QAAI,MAAAD,CAAA,GAAGtD,CAAA,CAAmBG,IAAA,GAAImD,CAAA;MAAAE,CAAA,GAAAxJ,CAAA,CAC9BqG,YAAA;MAAAlE,CAAA,QAAY,MAAAqH,CAAA,GAAGxD,CAAA,CAAmBK,YAAA,GAAYmD,CAAA;MAAAnH,CAAA,GAAArC,CAAA,CAC9CsG,YAAA;MAAA2B,CAAA,QAAY,MAAA5F,CAAA,GAAG2D,CAAA,CAAmBM,YAAA,GAAYjE,CAAA;MAAA8F,CAAA,GAAAnI,CAAA,CAC9CmE,KAAA;MAAAkE,CAAA,QAAK,MAAAF,CAAA,GAAGnC,CAAA,CAAmB7B,KAAA,GAAKgE,CAAA;MAAAI,CAAA,GAAAvI,CAAA,CAChC6G,WAAA;MAAA+B,CAAA,QAAW,MAAAL,CAAA,GAAGvC,CAAA,CAAmBa,WAAA,GAAW0B,CAAA;MAAA5D,CAAA,GAAA3E,CAAA,CAC5CoB,iBAAA;MAAAqI,CAAA,QAAiB,MAAA9E,CAAA,GAAGqB,CAAA,CAAmB5E,iBAAA,GAAiBuD,CAAA;MAAAzE,CAAA,GAAAF,CAAA,CACxDyE,WAAA;MAAAvC,CAAA,QAAW,MAAAhC,CAAA,GAAG8F,CAAA,CAAmBvB,WAAA,GAAWvE,CAAA;MAAAwJ,CAAA,GAAA1J,CAAA,CAC5C8G,eAAA;MAAA7E,CAAA,QAAe,MAAAyH,CAAA,GAAG1D,CAAA,CAAmBc,eAAA,GAAe4C,CAAA;MAAAlH,CAAA,GAAAxC,CAAA,CACpD+G,mBAAA;MAAA4C,CAAA,QAAmB,MAAAnH,CAAA,GAAGwD,CAAA,CAAmBe,mBAAA,GAAmBvE,CAAA;MAAAoH,CAAA,GAAA5J,CAAA,CAC5DgH,kBAAA;MAAAlH,CAAA,QAAkB,MAAA8J,CAAA,GAAG5D,CAAA,CAAmBgB,kBAAA,GAAkB4C,CAAA;MAAAzJ,CAAA,GAAAH,CAAA,CAC1DuG,MAAA;MAAAlG,CAAA,QAAM,MAAAF,CAAA,GAAG6F,CAAA,CAAmBO,MAAA,GAAMpG,CAAA;MAAAK,CAAA,GAAAR,CAAA,CAClCyG,OAAA;MAAA/F,CAAA,QAAO,MAAAF,CAAA,GAAGwF,CAAA,CAAmBS,OAAA,GAAOjG,CAAA;MAAAI,CAAA,GAAAZ,CAAA,CACpC0G,WAAA;MAAAhC,CAAA,QAAW,MAAA9D,CAAA,GAAGoF,CAAA,CAAmBU,WAAA,GAAW9F,CAAA;MAAAmE,CAAA,GAAA/E,CAAA,CAC5CgD,WAAA;MAAAsE,CAAA,QAAW,MAAAvC,CAAA,GAAGiB,CAAA,CAAmBhD,WAAA,GAAW+B,CAAA;MAAA0C,CAAA,GAAAzH,CAAA,CAC5C6D,cAAA;MAAA6D,CAAA,QAAc,MAAAD,CAAA,GAAGzB,CAAA,CAAmBnC,cAAA,GAAc4D,CAAA;MAAAqB,EAAA,GAAA9I,CAAA,CAClDoE,oBAAA;MAAAyF,EAAA,QAAoB,MAAAf,EAAA,GAAG9C,CAAA,CAAmB5B,oBAAA,GAAoB0E,EAAA;MA0BxDgB,EAAA,GAAcvI,CAAA,CAAoBF,CAAA;MAClC0I,EAAA,GAAWxI,CAAA,CAAoB0H,CAAA;MAC/Be,EAAA,GAAcvI,CAAA,CAAkByH,CAAA;MAChCe,EAAA,GAAW1I,CAAA,CAAoB8G,CAAA;MAC/B6B,EAAA,GAAiB3I,CAAA,CAAoBW,CAAA;MAErCiI,EAAA,GA3HsB,UAAHnK,CAAA;QAAA,IACzBC,CAAA,GAAKD,CAAA,CAAL6B,KAAA;UACAtB,CAAA,GAAMP,CAAA,CAAN8B,MAAA;UACAb,CAAA,GAAIjB,CAAA,CAAJmG,IAAA;UACAhF,CAAA,GAAYnB,CAAA,CAAZqG,YAAA;UACAhF,CAAA,GAAYrB,CAAA,CAAZsG,YAAA;UACA9E,CAAA,GAAiBxB,CAAA,CAAjBoB,iBAAA;UACAG,CAAA,GAAevB,CAAA,CAAf8G,eAAA;UACArF,CAAA,GAAmBzB,CAAA,CAAnB+G,mBAAA;UACAhF,CAAA,GAAU/B,CAAA,CAAVoG,UAAA;QAAU,OAYVrF,CAAA,CAAQ;UACJ,IAAMf,CAAA,GAAUoK,CAAA,GACXC,IAAA,CAAK,CAACpK,CAAA,EAAOM,CAAA,GACb4F,IAAA,CAAK2B,CAAA,CAAW7G,CAAA,GAChBqJ,KAAA,EAAM,GACNC,YAAA,CAAapJ,CAAA,EACbqJ,YAAA,CAAanJ,CAAA;UAElB,IAAIG,CAAA,KAAsBO,CAAA,EAAY;YAClC,IAAMhB,CAAA,GAAqBQ,CAAA,GAAiC,IAAfF,CAAA;YAE7CrB,CAAA,CAAO,YAAWyK,CAAA,CAAUhJ,CAAA,GAAwBV,CAAA,CACxD;UAAA;UAEA,OAAOf,CACV;QAAA,GAAE,CACCC,CAAA,EACAM,CAAA,EACAU,CAAA,EACAE,CAAA,EACAE,CAAA,EACAG,CAAA,EACAD,CAAA,EACAE,CAAA,EACAM,CAAA,EACF;MAAA,CA6Ea,CAAwB;QACnCF,KAAA,EAAAtB,CAAA;QACAuB,MAAA,EAAAb,CAAA;QACAkF,IAAA,EAAAoD,CAAA;QACAlD,YAAA,EAAAlE,CAAA;QACAmE,YAAA,EAAA2B,CAAA;QACA7G,iBAAA,EAAAqI,CAAA;QACA3C,eAAA,EAAA7E,CAAA;QACA8E,mBAAA,EAAA4C,CAAA;QACAvD,UAAA,EAAAiD;MAAA;MAGEqB,EAAA,GAAYlC,EAAA,CAAoB;QAAEE,IAAA,EAAMzI,CAAA;QAAM0I,QAAA,EAAAoB;MAAA;MAE9CY,EAAA,GAAW5J,CAAA,CAAQ;QAGrB,IAAMf,CAAA,GAAOsC,CAAA,CAAUoI,EAAA;QAGvB,OAFAP,EAAA,CAAOnK,CAAA,GAGHqJ,CAAA,GAAarJ,CAAA,CAAK4K,MAAA,KAAW5K,CAAA,CAAK6K,WAAA,EAEzC;MAAA,GAAE,CAACH,EAAA,EAAWP,EAAA,EAAQd,CAAA;MAEjByB,EAAA,GAAQ/J,CAAA,CACV;QAAA,OACI4J,EAAA,CAASI,GAAA,CAAI,UAAA/K,CAAA;UACT,IAAAC,CAAA,GA/Fa,UACzBD,CAAA,EACAC,CAAA;cAEA,IAAMM,CAAA,GAAOP,CAAA,CACRgL,SAAA,GACAD,GAAA,CAAI,UAAA/K,CAAA;gBAAQ,OAAIC,CAAA,CAAYD,CAAA,CAASgJ,IAAA;cAAA,GACrCiC,OAAA;cAEL,OAAO;gBAAEhG,IAAA,EAAM1E,CAAA,CAAK2K,IAAA,CAAK;gBAAMC,cAAA,EAAgB5K;cAAA,CACnD;YAAA,CAqFiD,CAAqBP,CAAA,EAAS8J,EAAA;YAAvDvJ,CAAA,GAAIN,CAAA,CAAJgF,IAAA;YAAMlE,CAAA,GAAcd,CAAA,CAAdkL,cAAA;YAERlK,CAAA,GAAO;cACTyB,EAAA,EAAIoH,EAAA,CAAY9J,CAAA,CAAQgJ,IAAA;cACxB/D,IAAA,EAAA1E,CAAA;cACA4K,cAAA,EAAApK,CAAA;cACAiI,IAAA,EAAMoC,CAAA,CAAKpL,CAAA,CAAQgJ,IAAA,EAAM;cACzB3G,CAAA,EAAGrC,CAAA,CAAQqL,EAAA;cACX/I,CAAA,EAAGtC,CAAA,CAAQsL,EAAA;cACXzJ,KAAA,EAAO7B,CAAA,CAAQuL,EAAA,GAAKvL,CAAA,CAAQqL,EAAA;cAC5BvJ,MAAA,EAAQ9B,CAAA,CAAQwL,EAAA,GAAKxL,CAAA,CAAQsL,EAAA;cAC7B1G,KAAA,EAAO5E,CAAA,CAAQ4E,KAAA;cACfC,cAAA,EAAgBmF,EAAA,CAAYhK,CAAA,CAAQ4E,KAAA;cACpC6G,SAAA,EAAWzL,CAAA,CAAQ0L,KAAA;cACnBC,UAAA,EAAY3L,CAAA,CAAQ8B,MAAA;cACpBE,QAAA,EAAUhC,CAAA,CAAQ8B,MAAA,GAAS;cAC3BJ,MAAA,EAA2B,MAAnB1B,CAAA,CAAQ8B,MAAA;cAChBwC,YAAA,EAAc;cACdC,YAAA,EAAc;cACdC,mBAAA,EAAqB;YAAA;UA2BzB,OAxBAvD,CAAA,CAAKiD,aAAA,GAAgB0E,CAAA,IAAe3H,CAAA,CAAKa,MAAA,GAASb,CAAA,CAAKY,KAAA,IAAS,KAAK,GAEzC,UAAxB8H,CAAA,KACA1I,CAAA,CAAKqD,YAAA,GAAe2D,CAAA,GAAenI,CAAA,EACnCmB,CAAA,CAAKsD,YAAA,GAAe0D,CAAA,GAAehG,CAAA,GAAkB,IAE7B,YAAxB0H,CAAA,KACA1I,CAAA,CAAKqD,YAAA,GAAerD,CAAA,CAAKY,KAAA,GAAQoG,CAAA,GAAehG,CAAA,GAAkB,GAClEhB,CAAA,CAAKsD,YAAA,GAAetD,CAAA,CAAKa,MAAA,GAASmG,CAAA,GAAenI,CAAA,EACjDmB,CAAA,CAAKuD,mBAAA,IAAuB,KAEJ,aAAxBmF,CAAA,KACA1I,CAAA,CAAKqD,YAAA,GAAe2D,CAAA,GAAenI,CAAA,EACnCmB,CAAA,CAAKsD,YAAA,GAAetD,CAAA,CAAKa,MAAA,GAASmG,CAAA,GAAehG,CAAA,GAAkB,IAE3C,WAAxB0H,CAAA,KACA1I,CAAA,CAAKqD,YAAA,GAAe2D,CAAA,GAAehG,CAAA,GAAkB,GACrDhB,CAAA,CAAKsD,YAAA,GAAetD,CAAA,CAAKa,MAAA,GAASmG,CAAA,GAAenI,CAAA,EACjDmB,CAAA,CAAKuD,mBAAA,IAAuB,KAGhCvD,CAAA,CAAKkD,KAAA,GAAQ8F,EAAA,CAAShJ,CAAA,GACtBA,CAAA,CAAKwD,WAAA,GAAcyF,EAAA,CAAejJ,CAAA,GAE3BA,CACX;QAAA,EACJ;MAAA,IACI0J,EAAA,EACAb,EAAA,EACAE,EAAA,EACAC,EAAA,EACArB,CAAA,EACAsB,EAAA,EACAjI,CAAA,EACA0H,CAAA,EACA7J,CAAA,EACAmI,CAAA;MAIF2D,EAAA,GAAQpK,CAAA;MACRqK,EAAA,GAAWC,CAAA,CAAqBzL,CAAA,EAAQK,CAAA;MACxCqL,EAAA,GAAiBC,CAAA,CAAkB1E,CAAA,EAAasE,EAAA;MAChDK,EAAA,GAAoBD,CAAA,CAAkBtE,CAAA,EAAgBkE,EAAA;MACtDM,EAAA,GAA0BF,CAAA,CAAkBnC,EAAA,EAAsB+B,EAAA;MAElEO,EAAA,GAAkBpL,CAAA,CACpB;QAAA,OACI+J,EAAA,CAAMC,GAAA,CAAI,UAAA/K,CAAA;UACN,IAAMC,CAAA,GAAc0D,CAAA,KACb3D,CAAA,EAAI;YACP6C,KAAA,EAAOgJ,EAAA,CAAS7L,CAAA;YAChBkD,OAAA,EAASwB;UAAA;UAOb,OAJAzE,CAAA,CAAe+C,WAAA,GAAc+I,EAAA,CAAe9L,CAAA,GAC5CA,CAAA,CAAe4D,cAAA,GAAiBoI,EAAA,CAAkBhM,CAAA,GAClDA,CAAA,CAAemE,oBAAA,GAAuB8H,EAAA,CAAwBjM,CAAA,GAEvDA,CACX;QAAA,EAAE;MAAA,GACN,CAAC6K,EAAA,EAAOe,EAAA,EAAUnH,CAAA,EAAaqH,EAAA,EAAgBE,EAAA,EAAmBC,EAAA;IAGtE,OAAO;MACHE,SAAA,EAAA1B,EAAA;MACA2B,KAAA,EAAOF,EAAA;MACPG,MAAA,EAAAnC;IAAA,CAER;EAAA;EA6EaN,EAAA,GAAsB,SAAA0C,CAAHvM,CAAA;IAAA,IAC5BC,CAAA,GAAKD,CAAA,CAALqM,KAAA;IAAK,OAELtL,CAAA,CACI;MAAA,OAAO;QACHsL,KAAA,EAAApM;MAAA,CACH;IAAA,GACD,CAACA,CAAA,EACJ;EAAA;ECpVC6J,EAAA,GAAuB,SAAA0C,CACzBxM,CAAA;IAAqC,OAChB;MACrBqC,CAAA,EAAGrC,CAAA,CAAKqC,CAAA;MACRC,CAAA,EAAGtC,CAAA,CAAKsC,CAAA;MACRT,KAAA,EAAO7B,CAAA,CAAK6B,KAAA;MACZC,MAAA,EAAQ9B,CAAA,CAAK8B,MAAA;MACbe,KAAA,EAAO7C,CAAA,CAAK6C,KAAA;MACZmB,MAAA,EAAQhE,CAAA,CAAK6B,KAAA,GAAQ;MACrBoC,MAAA,EAAQjE,CAAA,CAAK8B,MAAA,GAAS;MACtBoC,aAAA,EAAelE,CAAA,CAAKkE,aAAA;MACpBH,YAAA,EAAc;MACdO,YAAA,EAActE,CAAA,CAAKsE,YAAA;MACnBC,YAAA,EAAcvE,CAAA,CAAKuE,YAAA;MACnBC,mBAAA,EAAqBxE,CAAA,CAAKwE,mBAAA;MAC1BH,kBAAA,EAAoB;IAAA,CACvB;EAAA;EAEK0F,EAAA,GAA6B,SAAA0C,CAC/BzM,CAAA;IAKA,OAAO;MACHqC,CAAA,EAJMrC,CAAA,CAAKqC,CAAA,GAAIrC,CAAA,CAAK6B,KAAA,GAAQ;MAK5BS,CAAA,EAJMtC,CAAA,CAAKsC,CAAA,GAAItC,CAAA,CAAK8B,MAAA,GAAS;MAK7BD,KAAA,EAAO;MACPC,MAAA,EAAQ;MACRe,KAAA,EAAO7C,CAAA,CAAK6C,KAAA;MACZmB,MAAA,EAAQ;MACRC,MAAA,EAAQ;MACRC,aAAA,EAAelE,CAAA,CAAKkE,aAAA;MACpBH,YAAA,EAAc;MACdO,YAAA,EAAc;MACdC,YAAA,EAAc;MACdC,mBAAA,EAAqBxE,CAAA,CAAKwE,mBAAA;MAC1BH,kBAAA,EAAoB;IAAA,CAE5B;EAAA;EAwEa2F,EAAA,GAAehK,CAAA,CAvDI,UAAHA,CAAA;IAaG,IAZ5BiB,CAAA,GAAKjB,CAAA,CAALqM,KAAA;MACAlL,CAAA,GAAanB,CAAA,CAAbuH,aAAA;MACAlG,CAAA,GAAWrB,CAAA,CAAXgB,WAAA;MACAQ,CAAA,GAAWxB,CAAA,CAAXkB,WAAA;MACAK,CAAA,GAAavB,CAAA,CAAbsB,aAAA;MACAG,CAAA,GAAiBzB,CAAA,CAAjBoB,iBAAA;MAQM6H,CAAA,GD2LgC,UACtCjJ,CAAA,EAA4BiB,CAAA;QAgBQ,IAdhCE,CAAA,GAAaF,CAAA,CAAbgG,aAAA;UACA5F,CAAA,GAAYJ,CAAA,CAAZkC,YAAA;UACA3B,CAAA,GAAWP,CAAA,CAAXmC,WAAA;UACA7B,CAAA,GAAYN,CAAA,CAAZoC,YAAA;UACA5B,CAAA,GAAOR,CAAA,CAAPqC,OAAA;UACAvB,CAAA,GAAOd,CAAA,CAAPiG,OAAA;UAUJ+B,CAAA,GAA8CQ,CAAA;UAAtCP,CAAA,GAAoBD,CAAA,CAApByD,oBAAA;UAAsBtD,CAAA,GAAWH,CAAA,CAAX0D,WAAA;UAExBtD,CAAA,GAAcpJ,CAAA,CAChB,UAACD,CAAA,EAA2BC,CAAA;YACxBiJ,CAAA,CAAqB3I,CAAA,CAAcwB,CAAA,EAAS;cAAElB,IAAA,EAAAb;YAAA,IAASC,CAAA,EAAO,OAClE;UAAA,GACA,CAACiJ,CAAA,EAAsBnH,CAAA;UAGrBuH,CAAA,GAAmBrJ,CAAA,CACrB,UAACD,CAAA,EAA2BC,CAAA;YACxBoJ,CAAA,CAAYrJ,CAAA,EAAMC,CAAA,WAClBoB,CAAA,IAAAA,CAAA,CAAerB,CAAA,EAAMC,CAAA,CACzB;UAAA,GACA,CAACoB,CAAA,EAAcgI,CAAA;UAGbE,CAAA,GAAkBtJ,CAAA,CACpB,UAACD,CAAA,EAA2BC,CAAA;YACxBoJ,CAAA,CAAYrJ,CAAA,EAAMC,CAAA,WAClBuB,CAAA,IAAAA,CAAA,CAAcxB,CAAA,EAAMC,CAAA,CACxB;UAAA,GACA,CAACuB,CAAA,EAAa6H,CAAA;UAGZG,CAAA,GAAmBvJ,CAAA,CACrB,UAACD,CAAA,EAA2BC,CAAA;YACxBmJ,CAAA,YACA7H,CAAA,IAAAA,CAAA,CAAevB,CAAA,EAAMC,CAAA,CACzB;UAAA,GACA,CAACsB,CAAA,EAAc6H,CAAA;UAGbjH,CAAA,GAAclC,CAAA,CAChB,UAACD,CAAA,EAA2BC,CAAA;YAAA,QACxBwB,CAAA,IAAAA,CAAA,CAAUzB,CAAA,EAAMC,CAAA,CACpB;UAAA,GACA,CAACwB,CAAA;QAGL,OAAOV,CAAA,CACH;UAAA,OACIf,CAAA,CAAM+K,GAAA,CAAI,UAAA/K,CAAA;YACN,OAAKmB,CAAA,GAELwC,CAAA,KACO3D,CAAA,EAAI;cACPmD,YAAA,EAAc,SAAAA,CAAClD,CAAA;gBAAiB,OAAKqJ,CAAA,CAAiBtJ,CAAA,EAAMC,CAAA,CAAM;cAAA;cAClEmD,WAAA,EAAa,SAAAA,CAACnD,CAAA;gBAAiB,OAAKsJ,CAAA,CAAgBvJ,CAAA,EAAMC,CAAA,CAAM;cAAA;cAChEoD,YAAA,EAAc,SAAAA,CAACpD,CAAA;gBAAiB,OAAKuJ,CAAA,CAAiBxJ,CAAA,EAAMC,CAAA,CAAM;cAAA;cAClEqD,OAAA,EAAS,SAAAA,CAACrD,CAAA;gBAAiB,OAAKkC,CAAA,CAAYnC,CAAA,EAAMC,CAAA,CAAM;cAAA;YAAA,KAPjCD,CAS/B;UAAA,EAAE;QAAA,GACN,CAACmB,CAAA,EAAenB,CAAA,EAAOsJ,CAAA,EAAkBC,CAAA,EAAiBC,CAAA,EAAkBrH,CAAA,EAEpF;MAAA,CCpQ8B,CAAkClB,CAAA,EAAO;QAC/DgG,aAAA,EARSjH,CAAA,CAAbiH,aAAA;QASI9D,YAAA,EARQnD,CAAA,CAAZmD,YAAA;QASIC,WAAA,EAROpD,CAAA,CAAXoD,WAAA;QASIC,YAAA,EARQrD,CAAA,CAAZqD,YAAA;QASIC,OAAA,EARGtD,CAAA,CAAPsD,OAAA;QASI4D,OAAA,EARGlH,CAAA,CAAPkH;MAAA;MAWAgC,CAAA,GAA0CnH,CAAA;MAAlCqH,CAAA,GAAOF,CAAA,CAAP9B,OAAA;MAAiBiC,CAAA,GAAYH,CAAA,CAApB0D,MAAA;MACXtD,CAAA,GAAaI,CAAA,CACfT,CAAA,EACA;QACI4D,IAAA,EAAM,SAAAA,CAAA7M,CAAA;UAAI,OAAIA,CAAA,CAAKiF,IAAI;QAAA;QACvB6H,OAAA,EAAShD,EAAA;QACTnD,IAAA,EAAMoD,EAAA;QACNgD,KAAA,EAAOjD,EAAA;QACPkD,MAAA,EAAQlD,EAAA;QACRmD,KAAA,EAAOlD,EAAA;QACP6C,MAAA,EAAQvD,CAAA;QACR6D,SAAA,GAAY9D;MAAA;IAIpB,OACI5G,CAAA,CAAAmH,CAAA;MAAApH,QAAA,EACK+G,CAAA,CAAW,UAACtJ,CAAA,EAAeC,CAAA;QAAI,OAC5BM,CAAA,CAAcY,CAAA,EAAe;UACzBgM,GAAA,EAAKlN,CAAA,CAAKgF,IAAA;UACVpE,IAAA,EAAAZ,CAAA;UACAa,aAAA,EAAAd,CAAA;UACAgB,WAAA,EAAAK,CAAA;UACAH,WAAA,EAAAM,CAAA;UACAF,aAAA,EAAAC,CAAA;UACAH,iBAAA,EAAAK;QAAA;MAAA;IAAA,EAKpB;EAAA;EAAAwI,EAAA;ECjGMC,EAAA,GAAe,SAAAkD,CAAHpN,CAAA;IA0Cc,IAzC5BC,CAAA,GAAID,CAAA,CAAJgJ,IAAA;MAAIjI,CAAA,GAAAf,CAAA,CACJkG,QAAA;MAAA/E,CAAA,QAAQ,MAAAJ,CAAA,GAAGuG,CAAA,CAAgBpB,QAAA,GAAQnF,CAAA;MAAAM,CAAA,GAAArB,CAAA,CACnC4E,KAAA;MAAApD,CAAA,QAAK,MAAAH,CAAA,GAAGiG,CAAA,CAAgB1C,KAAA,GAAKvD,CAAA;MAC7BE,CAAA,GAAWvB,CAAA,CAAXmJ,WAAA;MAAW1H,CAAA,GAAAzB,CAAA,CACXmG,IAAA;MAAApE,CAAA,QAAI,MAAAN,CAAA,GAAG6F,CAAA,CAAgBnB,IAAA,GAAI1E,CAAA;MAAAwH,CAAA,GAAAjJ,CAAA,CAC3BuH,aAAA;MAAA+B,CAAA,QAAa,MAAAL,CAAA,GAAG3B,CAAA,CAAgBC,aAAA,GAAa0B,CAAA;MAAAM,CAAA,GAAAvJ,CAAA,CAC7CqG,YAAA;MAAAmD,CAAA,QAAY,MAAAD,CAAA,GAAGjC,CAAA,CAAgBjB,YAAA,GAAYkD,CAAA;MAAApH,CAAA,GAAAnC,CAAA,CAC3CsG,YAAA;MAAA8E,CAAA,QAAY,MAAAjJ,CAAA,GAAGmF,CAAA,CAAgBhB,YAAA,GAAYnE,CAAA;MAAAG,CAAA,GAAAtC,CAAA,CAC3CoG,UAAA;MAAAqE,CAAA,QAAU,MAAAnI,CAAA,GAAGgF,CAAA,CAAgBlB,UAAA,GAAU9D,CAAA;MACvCD,CAAA,GAAKrC,CAAA,CAAL6B,KAAA;MACAoG,CAAA,GAAMjI,CAAA,CAAN8B,MAAA;MACQqG,CAAA,GAAanI,CAAA,CAArBqN,MAAA;MAAMhF,CAAA,GAAArI,CAAA,CACNiG,MAAA;MAAAsC,CAAA,QAAM,MAAAF,CAAA,GAAGf,CAAA,CAAgBrB,MAAA,GAAMoC,CAAA;MAAA+B,CAAA,GAAApK,CAAA,CAC/BuG,MAAA;MAAAqC,CAAA,QAAM,MAAAwB,CAAA,GAAG9C,CAAA,CAAgBf,MAAA,GAAM6D,CAAA;MAAA0B,CAAA,GAAA9L,CAAA,CAC/ByG,OAAA;MAAAuF,CAAA,QAAO,MAAAF,CAAA,GAAGxE,CAAA,CAAgBb,OAAA,GAAOqF,CAAA;MAAAnH,CAAA,GAAA3E,CAAA,CACjC0G,WAAA;MAAA+C,CAAA,QAAW,MAAA9E,CAAA,GAAG2C,CAAA,CAAgBZ,WAAA,GAAW/B,CAAA;MAAAzE,CAAA,GAAAF,CAAA,CACzCgB,WAAA;MAAAkB,CAAA,QAAW,MAAAhC,CAAA,GAAGoH,CAAA,CAAgBtG,WAAA,GAAWd,CAAA;MAAAwJ,CAAA,GAAA1J,CAAA,CACzCgD,WAAA;MAAAf,CAAA,QAAW,MAAAyH,CAAA,GAAGpC,CAAA,CAAgBtE,WAAA,GAAW0G,CAAA;MAAAC,CAAA,GAAA3J,CAAA,CACzCwH,IAAA;MAAA7D,CAAA,QAAI,MAAAgG,CAAA,GAAGrC,CAAA,CAAgBE,IAAA,GAAImC,CAAA;MAAAC,CAAA,GAAA5J,CAAA,CAC3B4C,IAAA;MAAA9C,CAAA,QAAI,MAAA8J,CAAA,GAAGtC,CAAA,CAAgB1E,IAAA,GAAIgH,CAAA;MAAAzJ,CAAA,GAAAH,CAAA,CAC3BkB,WAAA;MAAAb,CAAA,QAAW,MAAAF,CAAA,GAAGmH,CAAA,CAAgBpG,WAAA,GAAWf,CAAA;MAAAK,CAAA,GAAAR,CAAA,CACzCmE,KAAA;MAAAzD,CAAA,QAAK,MAAAF,CAAA,GAAG8G,CAAA,CAAgBnD,KAAA,GAAK3D,CAAA;MAAAI,CAAA,GAAAZ,CAAA,CAC7B6D,cAAA;MAAAa,CAAA,QAAc,MAAA9D,CAAA,GAAG0G,CAAA,CAAgBzD,cAAA,GAAcjD,CAAA;MAAAmE,CAAA,GAAA/E,CAAA,CAC/C6G,WAAA;MAAAb,CAAA,QAAW,MAAAjB,CAAA,GAAGuC,CAAA,CAAgBT,WAAA,GAAW9B,CAAA;MAAA0C,CAAA,GAAAzH,CAAA,CACzCsB,aAAA;MAAAoG,CAAA,QAAa,MAAAD,CAAA,GAAGH,CAAA,CAAgBhG,aAAA,GAAamG,CAAA;MAAAK,CAAA,GAAA9H,CAAA,CAC7CoB,iBAAA;MAAAoH,EAAA,QAAiB,MAAAV,CAAA,GAAGR,CAAA,CAAgBlG,iBAAA,GAAiB0G,CAAA;MAAAgC,EAAA,GAAA9J,CAAA,CACrDyE,WAAA;MAAAsF,EAAA,QAAW,MAAAD,EAAA,GAAGxC,CAAA,CAAgB7C,WAAA,GAAWqF,EAAA;MAAAG,EAAA,GAAAjK,CAAA,CACzC8G,eAAA;MAAAoD,EAAA,QAAe,MAAAD,EAAA,GAAG3C,CAAA,CAAgBR,eAAA,GAAemD,EAAA;MAAAE,EAAA,GAAAnK,CAAA,CACjD+G,mBAAA;MAAA2D,EAAA,QAAmB,MAAAP,EAAA,GAAG7C,CAAA,CAAgBP,mBAAA,GAAmBoD,EAAA;MAAAQ,EAAA,GAAA3K,CAAA,CACzDgH,kBAAA;MAAA8D,EAAA,QAAkB,MAAAH,EAAA,GAAGrD,CAAA,CAAgBN,kBAAA,GAAkB2D,EAAA;MAAAiB,EAAA,GAAA5L,CAAA,CACvDoE,oBAAA;MAAAyH,EAAA,QAAoB,MAAAD,EAAA,GAAGtE,CAAA,CAAgBlD,oBAAA,GAAoBwH,EAAA;MAAAG,EAAA,GAAA/L,CAAA,CAC3DiH,aAAA;MAAAgF,EAAA,QAAa,MAAAF,EAAA,GAAGzE,CAAA,CAAgBL,aAAA,GAAa8E,EAAA;MAC7CG,EAAA,GAAYlM,CAAA,CAAZmD,YAAA;MACAgJ,EAAA,GAAWnM,CAAA,CAAXoD,WAAA;MACAkK,EAAA,GAAYtN,CAAA,CAAZqD,YAAA;MACAkK,EAAA,GAAOvN,CAAA,CAAPsD,OAAA;MAAOkK,EAAA,GAAAxN,CAAA,CACPkH,OAAA;MAAAuG,EAAA,QAAO,MAAAD,EAAA,GAAGlG,CAAA,CAAgBJ,OAAA,GAAOsG,EAAA;MACjCE,EAAA,GAAI1N,CAAA,CAAJmH,IAAA;MACAwG,EAAA,GAAS3N,CAAA,CAAT4N,SAAA;MACAC,EAAA,GAAc7N,CAAA,CAAd8N,cAAA;MACAC,EAAA,GAAe/N,CAAA,CAAfgO,eAAA;MAEAC,EAAA,GAAqE/E,CAAA,CACjE7G,CAAA,EACA4F,CAAA,EACAE,CAAA;MAHI+F,EAAA,GAAMD,EAAA,CAANZ,MAAA;MAAQc,EAAA,GAAUF,EAAA,CAAVG,UAAA;MAAYC,EAAA,GAAWJ,EAAA,CAAXK,WAAA;MAAaC,EAAA,GAAUN,EAAA,CAAVO,UAAA;MAAYC,EAAA,GAAWR,EAAA,CAAXS,WAAA;MAM7CC,EAAA,GAAU7F,EAAA,CAAkB;QAChCE,IAAA,EAAA/I,CAAA;QACAiG,QAAA,EAAA/E,CAAA;QACAyD,KAAA,EAAApD,CAAA;QACA2H,WAAA,EAAA5H,CAAA;QACA6E,UAAA,EAAAqE,CAAA;QACA5I,KAAA,EAAOsM,EAAA;QACPrM,MAAA,EAAQuM,EAAA;QACRlI,IAAA,EAAApE,CAAA;QACAsE,YAAA,EAAAmD,CAAA;QACAlD,YAAA,EAAA8E,CAAA;QACA7E,MAAA,EAAAqC,CAAA;QACAnC,OAAA,EAAAuF,CAAA;QACAtF,WAAA,EAAA+C,CAAA;QACAzG,WAAA,EAAAf,CAAA;QACAkC,KAAA,EAAAzD,CAAA;QACAmD,cAAA,EAAAa,CAAA;QACAmC,WAAA,EAAAb,CAAA;QACA5E,iBAAA,EAAAoH,EAAA;QACA/D,WAAA,EAAAsF,EAAA;QACAjD,eAAA,EAAAoD,EAAA;QACAnD,mBAAA,EAAA2D,EAAA;QACA1D,kBAAA,EAAA8D,EAAA;QACA1G,oBAAA,EAAAyH;MAAA,GAvBIQ,KAAA;MA0BFuC,EAAA,GAAwC;QAC1CvC,KAAA,EAAO;MAAA;IAGP9D,CAAA,CAAOsG,QAAA,CAAS,aAChBD,EAAA,CAAUvC,KAAA,GACN7J,CAAA,CAACwH,EAAA,EAAY;MAETqC,KAAA,EAAOsC,EAAA;MACPpH,aAAA,EAAe+B,CAAA;MACftI,WAAA,EAAakB,CAAA;MACbhB,WAAA,EAAab,CAAA;MACbiB,aAAA,EAAeoG,CAAA;MACftG,iBAAA,EAAmBoH,EAAA;MACnBvB,aAAA,EAAegF,EAAA;MACf9I,YAAA,EAAc+I,EAAA;MACd9I,WAAA,EAAa+I,EAAA;MACb9I,YAAA,EAAciK,EAAA;MACdhK,OAAA,EAASiK,EAAA;MACTrG,OAAA,EAASuG;IAAA,GAZL;IAiBhB,IAAMqB,EAAA,GAAmBjF,EAAA,CAA2B;QAAEwC,KAAA,EAAAsC;MAAA;MAEhDI,EAAA,GAAY3F,CAAA,CAASzF,CAAA,EAAMgL,EAAA,EAAO7O,CAAA;IAExC,OACI0C,CAAA,CAAC6G,CAAA,EAAU;MACPxH,KAAA,EAAO0M,EAAA;MACPzM,MAAA,EAAQ2M,EAAA;MACRpB,MAAA,EAAQa,EAAA;MACR1G,IAAA,EAAMuH,EAAA;MACN5H,IAAA,EAAMuG,EAAA;MACNE,SAAA,EAAWD,EAAA;MACXG,cAAA,EAAgBD,EAAA;MAChBG,eAAA,EAAiBD,EAAA;MAAgBxL,QAAA,EAEhCgG,CAAA,CAAOwC,GAAA,CAAI,UAAC/K,CAAA,EAAOC,CAAA;QAAM,IAAAc,CAAA;QACtB,OAAqB,qBAAVf,CAAA,GACAwC,CAAA,CAACvB,CAAA,EAAQ;UAAAsB,QAAA,EAAUhC,CAAA,CAAcP,CAAA,EAAO8O,EAAA;QAAA,GAAzB7O,CAAA,IAGD,SAAzBc,CAAA,GAAO,QAAA6N,EAAA,YAAAA,EAAA,CAAY5O,CAAA,KAAMe,CAAA,GAAI;MAAA;IAAA,EAI7C;EAAA;EAEaoJ,EAAA,GAAU,SAAA6E,CAAHhP,CAAA;IAAA,IAAAC,CAAA,GAAAD,CAAA,CAChBiH,aAAA;MAAA1G,CAAA,QAAa,MAAAN,CAAA,GAAGqH,CAAA,CAAgBL,aAAA,GAAahH,CAAA;MAAAc,CAAA,GAAAf,CAAA,CAC7CoH,OAAA;MAAAnG,CAAA,QAAO,MAAAF,CAAA,GAAGuG,CAAA,CAAgBF,OAAA,GAAOrG,CAAA;MAAAI,CAAA,GAAAnB,CAAA,CACjCqH,YAAA;MAAAhG,CAAA,QAAY,MAAAF,CAAA,GAAGmG,CAAA,CAAgBD,YAAA,GAAYlG,CAAA;MAC3CK,CAAA,GAAKxB,CAAA,CAALiP,KAAA;MACA1N,CAAA,GAAavB,CAAA,CAAbkP,aAAA;MACGzN,CAAA,GAAUmI,CAAA,CAAA5J,CAAA,EAAAiK,EAAA;IAAA,OAEbzH,CAAA,CAACyG,CAAA,EAAS;MAEF7B,OAAA,EAAAnG,CAAA;MACAgG,aAAA,EAAA1G,CAAA;MACA8G,YAAA,EAAAhG,CAAA;MACA6N,aAAA,EAAA3N,CAAA;MACA0N,KAAA,EAAAzN,CAAA;MAAKe,QAAA,EAGTC,CAAA,CAAC0H,EAAA,EAAYvG,CAAA;QAAQsD,aAAA,EAAe1G;MAAA,GAAmBkB,CAAA;IAAA,EAC/C;EAAA;ECnKHiJ,EAAA,GAAoB,SAAAyE,CAC7BnP,CAAA;IAAuD,OAEvDwC,CAAA,CAAC8G,CAAA,EAAiB;MAAA/G,QAAA,EACb,SAAAA,CAAAtC,CAAA;QAAA,IAAGM,CAAA,GAAKN,CAAA,CAAL4B,KAAA;UAAOd,CAAA,GAAMd,CAAA,CAAN6B,MAAA;QAAM,OAAOU,CAAA,CAAC2H,EAAA,EAAOxG,CAAA;UAAQ9B,KAAA,EAAOtB,CAAA;UAAOuB,MAAA,EAAQf;QAAA,GAAYf,CAAA,EAAS;MAAA;IAAA,EACnE;EAAA;EAAA2K,EAAA;ECGlBG,EAAA,GAAmB,SAAAsE,CAAHpP,CAAA;IAwCc,IAvChCC,CAAA,GAAID,CAAA,CAAJgJ,IAAA;MAAIjI,CAAA,GAAAf,CAAA,CACJkG,QAAA;MAAA/E,CAAA,QAAQ,MAAAJ,CAAA,GAAG0G,CAAA,CAAiBvB,QAAA,GAAQnF,CAAA;MAAAM,CAAA,GAAArB,CAAA,CACpC4E,KAAA;MAAApD,CAAA,QAAK,MAAAH,CAAA,GAAGoG,CAAA,CAAiB7C,KAAA,GAAKvD,CAAA;MAAAE,CAAA,GAAAvB,CAAA,CAC9BmG,IAAA;MAAA1E,CAAA,QAAI,MAAAF,CAAA,GAAGkG,CAAA,CAAiBtB,IAAA,GAAI5E,CAAA;MAAAQ,CAAA,GAAA/B,CAAA,CAC5BuH,aAAA;MAAA0B,CAAA,QAAa,MAAAlH,CAAA,GAAG0F,CAAA,CAAiBF,aAAA,GAAaxF,CAAA;MAC9CqH,CAAA,GAAWpJ,CAAA,CAAXmJ,WAAA;MAAWE,CAAA,GAAArJ,CAAA,CACXqG,YAAA;MAAAiD,CAAA,QAAY,MAAAD,CAAA,GAAG5B,CAAA,CAAiBpB,YAAA,GAAYgD,CAAA;MAAAE,CAAA,GAAAvJ,CAAA,CAC5CsG,YAAA;MAAAkD,CAAA,QAAY,MAAAD,CAAA,GAAG9B,CAAA,CAAiBnB,YAAA,GAAYiD,CAAA;MAAApH,CAAA,GAAAnC,CAAA,CAC5CoG,UAAA;MAAAgF,CAAA,QAAU,MAAAjJ,CAAA,GAAGsF,CAAA,CAAiBrB,UAAA,GAAUjE,CAAA;MACxCG,CAAA,GAAKtC,CAAA,CAAL6B,KAAA;MACA4I,CAAA,GAAMzK,CAAA,CAAN8B,MAAA;MACQO,CAAA,GAAarC,CAAA,CAArBqN,MAAA;MAAMpF,CAAA,GAAAjI,CAAA,CACNiG,MAAA;MAAAkC,CAAA,QAAM,MAAAF,CAAA,GAAGX,CAAA,CAAgBrB,MAAA,GAAMgC,CAAA;MAAAI,CAAA,GAAArI,CAAA,CAC/BuG,MAAA;MAAAgC,CAAA,QAAM,MAAAF,CAAA,GAAGZ,CAAA,CAAiBlB,MAAA,GAAM8B,CAAA;MAAA+B,CAAA,GAAApK,CAAA,CAChCyG,OAAA;MAAAmC,CAAA,QAAO,MAAAwB,CAAA,GAAG3C,CAAA,CAAiBhB,OAAA,GAAO2D,CAAA;MAAA0B,CAAA,GAAA9L,CAAA,CAClC0G,WAAA;MAAAsF,CAAA,QAAW,MAAAF,CAAA,GAAGrE,CAAA,CAAiBf,WAAA,GAAWoF,CAAA;MAAAnH,CAAA,GAAA3E,CAAA,CAC1CgB,WAAA;MAAAyI,CAAA,QAAW,MAAA9E,CAAA,GAAG8C,CAAA,CAAiBzG,WAAA,GAAW2D,CAAA;MAAAzE,CAAA,GAAAF,CAAA,CAC1CgD,WAAA;MAAAd,CAAA,QAAW,MAAAhC,CAAA,GAAGuH,CAAA,CAAiBzE,WAAA,GAAW9C,CAAA;MAAAwJ,CAAA,GAAA1J,CAAA,CAC1CkB,WAAA;MAAAe,CAAA,QAAW,MAAAyH,CAAA,GAAGjC,CAAA,CAAiBvG,WAAA,GAAWwI,CAAA;MAAAC,CAAA,GAAA3J,CAAA,CAC1CmE,KAAA;MAAAR,CAAA,QAAK,MAAAgG,CAAA,GAAGlC,CAAA,CAAiBtD,KAAA,GAAKwF,CAAA;MAAAC,CAAA,GAAA5J,CAAA,CAC9B6D,cAAA;MAAA/D,CAAA,QAAc,MAAA8J,CAAA,GAAGnC,CAAA,CAAiB5D,cAAA,GAAc+F,CAAA;MAAAzJ,CAAA,GAAAH,CAAA,CAChD6G,WAAA;MAAAxG,CAAA,QAAW,MAAAF,CAAA,GAAGsH,CAAA,CAAiBZ,WAAA,GAAW1G,CAAA;MAAAK,CAAA,GAAAR,CAAA,CAC1CsB,aAAA;MAAAZ,CAAA,QAAa,MAAAF,CAAA,GAAGiH,CAAA,CAAiBnG,aAAA,GAAad,CAAA;MAAAI,CAAA,GAAAZ,CAAA,CAC9CoB,iBAAA;MAAAsD,CAAA,QAAiB,MAAA9D,CAAA,GAAG6G,CAAA,CAAiBrG,iBAAA,GAAiBR,CAAA;MAAAmE,CAAA,GAAA/E,CAAA,CACtDyE,WAAA;MAAAuB,CAAA,QAAW,MAAAjB,CAAA,GAAG0C,CAAA,CAAiBhD,WAAA,GAAWM,CAAA;MAAA2C,CAAA,GAAA1H,CAAA,CAC1C8G,eAAA;MAAAgB,CAAA,QAAe,MAAAJ,CAAA,GAAGD,CAAA,CAAiBX,eAAA,GAAeY,CAAA;MAAAc,EAAA,GAAAxI,CAAA,CAClD+G,mBAAA;MAAA+C,EAAA,QAAmB,MAAAtB,EAAA,GAAGf,CAAA,CAAiBV,mBAAA,GAAmByB,EAAA;MAAAuB,EAAA,GAAA/J,CAAA,CAC1DgH,kBAAA;MAAAiD,EAAA,QAAkB,MAAAF,EAAA,GAAGtC,CAAA,CAAiBT,kBAAA,GAAkB+C,EAAA;MAAAG,EAAA,GAAAlK,CAAA,CACxDoE,oBAAA;MAAA+F,EAAA,QAAoB,MAAAD,EAAA,GAAGzC,CAAA,CAAiBrD,oBAAA,GAAoB8F,EAAA;MAAAQ,EAAA,GAAA1K,CAAA,CAC5DiH,aAAA;MAAA0D,EAAA,QAAa,MAAAD,EAAA,GAAGjD,CAAA,CAAiBR,aAAA,GAAayD,EAAA;MAC9CI,EAAA,GAAY9K,CAAA,CAAZmD,YAAA;MACAyI,EAAA,GAAW5L,CAAA,CAAXoD,WAAA;MACAyI,EAAA,GAAY7L,CAAA,CAAZqD,YAAA;MACA0I,EAAA,GAAO/L,CAAA,CAAPsD,OAAA;MAAO2I,EAAA,GAAAjM,CAAA,CACPkH,OAAA;MAAAgF,EAAA,QAAO,MAAAD,EAAA,GAAGxE,CAAA,CAAiBP,OAAA,GAAO+E,EAAA;MAClCE,EAAA,GAAInM,CAAA,CAAJmH,IAAA;MACAmG,EAAA,GAAStN,CAAA,CAAT4N,SAAA;MACAL,EAAA,GAAcvN,CAAA,CAAd8N,cAAA;MACAN,EAAA,GAAexN,CAAA,CAAfgO,eAAA;MAEAP,EAAA,GAAqEvE,CAAA,CACjE5G,CAAA,EACAmI,CAAA,EACApI,CAAA;MAHIqL,EAAA,GAAMD,EAAA,CAANJ,MAAA;MAAQM,EAAA,GAAUF,EAAA,CAAVW,UAAA;MAAYP,EAAA,GAAWJ,EAAA,CAAXa,WAAA;MAAaP,EAAA,GAAUN,EAAA,CAAVe,UAAA;MAAYP,EAAA,GAAWR,EAAA,CAAXiB,WAAA;MAM7CR,EAAA,GAAUpF,EAAA,CAAkB;QAChCE,IAAA,EAAA/I,CAAA;QACAiG,QAAA,EAAA/E,CAAA;QACAyD,KAAA,EAAApD,CAAA;QACA2H,WAAA,EAAAC,CAAA;QACAhD,UAAA,EAAAgF,CAAA;QACAvJ,KAAA,EAAO8L,EAAA;QACP7L,MAAA,EAAQ+L,EAAA;QACR1H,IAAA,EAAA1E,CAAA;QACA4E,YAAA,EAAAiD,CAAA;QACAhD,YAAA,EAAAkD,CAAA;QACAjD,MAAA,EAAAgC,CAAA;QACA9B,OAAA,EAAAmC,CAAA;QACAlC,WAAA,EAAAsF,CAAA;QACAhJ,WAAA,EAAAd,CAAA;QACAiC,KAAA,EAAAR,CAAA;QACAE,cAAA,EAAA/D,CAAA;QACA+G,WAAA,EAAAxG,CAAA;QACAe,iBAAA,EAAAsD,CAAA;QACAD,WAAA,EAAAuB,CAAA;QACAc,eAAA,EAAAgB,CAAA;QACAf,mBAAA,EAAA+C,EAAA;QACA9C,kBAAA,EAAAiD,EAAA;QACA7F,oBAAA,EAAA+F;MAAA,GAvBIkC,KAAA;MA0BF8B,EAAA,GAAwC;QAC1C9B,KAAA,EAAO;MAAA;IAGPlE,CAAA,CAAO0G,QAAA,CAAS,aAChBV,EAAA,CAAU9B,KAAA,GACN7J,CAAA,CAACwH,EAAA,EAAY;MAETqC,KAAA,EAAO6B,EAAA;MACP3G,aAAA,EAAe0B,CAAA;MACfjI,WAAA,EAAayI,CAAA;MACbvI,WAAA,EAAae,CAAA;MACbX,aAAA,EAAeZ,CAAA;MACfU,iBAAA,EAAmBsD,CAAA;MACnBuC,aAAA,EAAe0D,EAAA;MACfxH,YAAA,EAAc2H,EAAA;MACd1H,WAAA,EAAawI,EAAA;MACbvI,YAAA,EAAcwI,EAAA;MACdvI,OAAA,EAASyI,EAAA;MACT7E,OAAA,EAASgF;IAAA,GAZL;IAiBhB,IAAMmC,EAAA,GAAmBxE,EAAA,CAA2B;MAAEwC,KAAA,EAAA6B;IAAA;IAEtD,OACI1L,CAAA;MACI2E,IAAA,EAAMgF,EAAA;MACN,cAAYmB,EAAA;MACZ,mBAAiBC,EAAA;MACjB,oBAAkBC,EAAA;MAClB9J,KAAA,EAAO;QACH0B,QAAA,EAAU;QACVvD,KAAA,EAAOkM,EAAA;QACPjM,MAAA,EAAQmM;MAAA;MACV1L,QAAA,EAEFC,CAAA;QAAKkB,KAAA,EAAO;UAAE0B,QAAA,EAAU;UAAYC,GAAA,EAAKqI,EAAA,CAAOrI,GAAA;UAAKC,IAAA,EAAMoI,EAAA,CAAOpI;QAAA;QAAO/C,QAAA,EACpE4F,CAAA,CAAO4C,GAAA,CAAI,UAAC/K,CAAA,EAAOC,CAAA;UAAM,IAAAc,CAAA;UACtB,OAAqB,qBAAVf,CAAA,GACAwC,CAAA,CAACvB,CAAA,EAAQ;YAAAsB,QAAA,EAAUhC,CAAA,CAAcP,CAAA,EAAOqO,EAAA;UAAA,GAAzBpO,CAAA,IAGD,SAAzBc,CAAA,GAAO,QAAAoN,EAAA,YAAAA,EAAA,CAAYnO,CAAA,KAAMe,CAAA,GAAI;QAAA;MAAA;IAAA,EAKjD;EAAA;EAEa6K,EAAA,GAAc,SAAAyD,CAAHrP,CAAA;IAAA,IAAAC,CAAA,GAAAD,CAAA,CACpBiH,aAAA;MAAA1G,CAAA,QAAa,MAAAN,CAAA,GAAGwH,CAAA,CAAiBR,aAAA,GAAahH,CAAA;MAAAc,CAAA,GAAAf,CAAA,CAC9CoH,OAAA;MAAAnG,CAAA,QAAO,MAAAF,CAAA,GAAG0G,CAAA,CAAiBL,OAAA,GAAOrG,CAAA;MAAAI,CAAA,GAAAnB,CAAA,CAClCqH,YAAA;MAAAhG,CAAA,QAAY,MAAAF,CAAA,GAAGsG,CAAA,CAAiBJ,YAAA,GAAYlG,CAAA;MAC5CK,CAAA,GAAKxB,CAAA,CAALiP,KAAA;MACA1N,CAAA,GAAavB,CAAA,CAAbkP,aAAA;MACGzN,CAAA,GAAUmI,CAAA,CAAA5J,CAAA,EAAA2K,EAAA;IAAA,OAEbnI,CAAA,CAACyG,CAAA,EAAS;MAEF7B,OAAA,EAAAnG,CAAA;MACAgG,aAAA,EAAA1G,CAAA;MACA8G,YAAA,EAAAhG,CAAA;MACA6N,aAAA,EAAA3N,CAAA;MACA0N,KAAA,EAAAzN,CAAA;MAAKe,QAAA,EAGTC,CAAA,CAACsI,EAAA,EAAgBnH,CAAA;QAAQsD,aAAA,EAAe1G;MAAA,GAAmBkB,CAAA;IAAA,EACnD;EAAA;ECtJHoK,EAAA,GAAwB,SAAAyD,CACjCtP,CAAA;IAAwD,OAExDwC,CAAA,CAAC8G,CAAA,EAAiB;MAAA/G,QAAA,EACb,SAAAA,CAAAtC,CAAA;QAAA,IAAGM,CAAA,GAAKN,CAAA,CAAL4B,KAAA;UAAOd,CAAA,GAAMd,CAAA,CAAN6B,MAAA;QAAM,OAAOU,CAAA,CAACoJ,EAAA,EAAWjI,CAAA;UAAQ9B,KAAA,EAAOtB,CAAA;UAAOuB,MAAA,EAAQf;QAAA,GAAYf,CAAA,EAAS;MAAA;IAAA,EACvE;EAAA;EAAA+L,EAAA;ECMlBE,EAAA,GAAsB,SAAAsD,CACxBvP,CAAA,EACAC,CAAA,EACAM,CAAA,EACAQ,CAAA;IAAS,OAETf,CAAA,CAAMwP,IAAA,CAAK,UAAAxP,CAAA;MAAI,OACXmC,CAAA,CAAenC,CAAA,CAAKqC,CAAA,GAAIpC,CAAA,CAAOqF,IAAA,EAAMtF,CAAA,CAAKsC,CAAA,GAAIrC,CAAA,CAAOoF,GAAA,EAAKrF,CAAA,CAAK6B,KAAA,EAAO7B,CAAA,CAAK8B,MAAA,EAAQvB,CAAA,EAAGQ,CAAA,CAAE;IAAA,EAC3F;EAAA;EAOCmL,EAAA,GAAqB,SAAAuD,CAAHzP,CAAA;IA+Bc,IA9BlCe,CAAA,GAAIf,CAAA,CAAJgJ,IAAA;MAAI/H,CAAA,GAAAjB,CAAA,CACJkG,QAAA;MAAA3E,CAAA,QAAQ,MAAAN,CAAA,GAAGyG,CAAA,CAAmBxB,QAAA,GAAQjF,CAAA;MAAAQ,CAAA,GAAAzB,CAAA,CACtC4E,KAAA;MAAA7C,CAAA,QAAK,MAAAN,CAAA,GAAGiG,CAAA,CAAmBxB,QAAA,GAAQzE,CAAA;MAAAwH,CAAA,GAAAjJ,CAAA,CACnCmG,IAAA;MAAAiD,CAAA,QAAI,MAAAH,CAAA,GAAGvB,CAAA,CAAmBvB,IAAA,GAAI8C,CAAA;MAC9BI,CAAA,GAAWrJ,CAAA,CAAXmJ,WAAA;MAAWG,CAAA,GAAAtJ,CAAA,CACXqG,YAAA;MAAAlE,CAAA,QAAY,MAAAmH,CAAA,GAAG5B,CAAA,CAAmBrB,YAAA,GAAYiD,CAAA;MAAA8B,CAAA,GAAApL,CAAA,CAC9CsG,YAAA;MAAAhE,CAAA,QAAY,MAAA8I,CAAA,GAAG1D,CAAA,CAAmBpB,YAAA,GAAY8E,CAAA;MAAAX,CAAA,GAAAzK,CAAA,CAC9CoG,UAAA;MAAA/D,CAAA,QAAU,MAAAoI,CAAA,GAAG/C,CAAA,CAAmBtB,UAAA,GAAUqE,CAAA;MAC1CxC,CAAA,GAAKjI,CAAA,CAAL6B,KAAA;MACAsG,CAAA,GAAMnI,CAAA,CAAN8B,MAAA;MACQuG,CAAA,GAAarI,CAAA,CAArBqN,MAAA;MAAM9E,CAAA,GAAAvI,CAAA,CACNuG,MAAA;MAAA6D,CAAA,QAAM,MAAA7B,CAAA,GAAGb,CAAA,CAAmBnB,MAAA,GAAMgC,CAAA;MAAAK,CAAA,GAAA5I,CAAA,CAClCyG,OAAA;MAAAqF,CAAA,QAAO,MAAAlD,CAAA,GAAGlB,CAAA,CAAmBjB,OAAA,GAAOmC,CAAA;MAAAoD,CAAA,GAAAhM,CAAA,CACpC0G,WAAA;MAAA/B,CAAA,QAAW,MAAAqH,CAAA,GAAGtE,CAAA,CAAmBhB,WAAA,GAAWsF,CAAA;MAAA9L,CAAA,GAAAF,CAAA,CAC5CgB,WAAA;MAAAkB,CAAA,QAAW,MAAAhC,CAAA,GAAGwH,CAAA,CAAmB1G,WAAA,GAAWd,CAAA;MAAAwJ,CAAA,GAAA1J,CAAA,CAC5CgD,WAAA;MAAAf,CAAA,QAAW,MAAAyH,CAAA,GAAGhC,CAAA,CAAmB1E,WAAA,GAAW0G,CAAA;MAAAC,CAAA,GAAA3J,CAAA,CAC5CkB,WAAA;MAAAyC,CAAA,QAAW,MAAAgG,CAAA,GAAGjC,CAAA,CAAmBxG,WAAA,GAAWyI,CAAA;MAAAC,CAAA,GAAA5J,CAAA,CAC5CmE,KAAA;MAAArE,CAAA,QAAK,MAAA8J,CAAA,GAAGlC,CAAA,CAAmBvD,KAAA,GAAKyF,CAAA;MAAAzJ,CAAA,GAAAH,CAAA,CAChC6D,cAAA;MAAAxD,CAAA,QAAc,MAAAF,CAAA,GAAGuH,CAAA,CAAmB7D,cAAA,GAAc1D,CAAA;MAAAK,CAAA,GAAAR,CAAA,CAClD6G,WAAA;MAAAnG,CAAA,QAAW,MAAAF,CAAA,GAAGkH,CAAA,CAAmBb,WAAA,GAAWrG,CAAA;MAAAI,CAAA,GAAAZ,CAAA,CAC5CsB,aAAA;MAAAoD,CAAA,QAAa,MAAA9D,CAAA,GAAG8G,CAAA,CAAmBpG,aAAA,GAAaV,CAAA;MAAAmE,CAAA,GAAA/E,CAAA,CAChDiH,aAAA;MAAAjB,CAAA,QAAa,MAAAjB,CAAA,GAAG2C,CAAA,CAAmBT,aAAA,GAAalC,CAAA;MAChDuC,CAAA,GAAWtH,CAAA,CAAXoD,WAAA;MACAqE,CAAA,GAAOzH,CAAA,CAAPsD,OAAA;MAAOwE,CAAA,GAAA9H,CAAA,CACPkH,OAAA;MAAAsB,EAAA,QAAO,MAAAV,CAAA,GAAGJ,CAAA,CAAmBR,OAAA,GAAOY,CAAA;MAAA+B,EAAA,GAAA7J,CAAA,CACpC2H,UAAA;MAAAmC,EAAA,QAAU,MAAAD,EAAA,GAAGnC,CAAA,CAAmBC,UAAA,GAAUkC,EAAA;MAC1CE,EAAA,GAAI/J,CAAA,CAAJmH,IAAA;MACA6C,EAAA,GAAShK,CAAA,CAAT4N,SAAA;MACA3D,EAAA,GAAcjK,CAAA,CAAd8N,cAAA;MACA5D,EAAA,GAAelK,CAAA,CAAfgO,eAAA;MAEM7D,EAAA,GAAWhJ,CAAA,CAAiC;MAElDuJ,EAAA,GAAqExB,CAAA,CACjEjB,CAAA,EACAE,CAAA,EACAE,CAAA;MAHIsC,EAAA,GAAMD,EAAA,CAAN2C,MAAA;MAAQvC,EAAA,GAAUJ,EAAA,CAAV0D,UAAA;MAAYxC,EAAA,GAAWlB,EAAA,CAAX4D,WAAA;MAAazC,EAAA,GAAUnB,EAAA,CAAV8D,UAAA;MAAYzC,EAAA,GAAWrB,EAAA,CAAXgE,WAAA;MAM7CxC,EAAA,GAAUpD,EAAA,CAAkB;QAChCE,IAAA,EAAAjI,CAAA;QACAmF,QAAA,EAAA3E,CAAA;QACAqD,KAAA,EAAA7C,CAAA;QACAoH,WAAA,EAAAE,CAAA;QACAjD,UAAA,EAAA/D,CAAA;QACAR,KAAA,EAAOiJ,EAAA;QACPhJ,MAAA,EAAQ8J,EAAA;QACRzF,IAAA,EAAAiD,CAAA;QACA/C,YAAA,EAAAlE,CAAA;QACAmE,YAAA,EAAAhE,CAAA;QACAiE,MAAA,EAAA6D,CAAA;QACA3D,OAAA,EAAAqF,CAAA;QACApF,WAAA,EAAA/B,CAAA;QACA3B,WAAA,EAAAf,CAAA;QACAkC,KAAA,EAAArE,CAAA;QACA+D,cAAA,EAAAxD,CAAA;QACAwG,WAAA,EAAAnG,CAAA;QACAU,iBAAA,GAAmB;MAAA,GAlBfiL,KAAA;MAqBFF,EAAA,GAAQ3K,CAAA;IAEdH,CAAA,CAAU;MACN,IAAyB,SAArB8I,EAAA,CAASuF,OAAA,EAAb;QAEA,IAAM1P,CAAA,GAAMmK,EAAA,CAASuF,OAAA,CAAQC,UAAA,CAAW;QAC5B,SAAR3P,CAAA,KAEJmK,EAAA,CAASuF,OAAA,CAAQ7N,KAAA,GAAQgK,EAAA,GAAa/B,EAAA,EACtCK,EAAA,CAASuF,OAAA,CAAQ5N,MAAA,GAASiK,EAAA,GAAcjC,EAAA,EAExC9J,CAAA,CAAI4P,KAAA,CAAM9F,EAAA,EAAYA,EAAA,GAEtB9J,CAAA,CAAI6P,SAAA,GAAY1D,EAAA,CAAM1G,UAAA,EACtBzF,CAAA,CAAI8P,QAAA,CAAS,GAAG,GAAGjE,EAAA,EAAYE,EAAA,GAC/B/L,CAAA,CAAI+P,SAAA,CAAUpF,EAAA,CAAOrF,IAAA,EAAMqF,EAAA,CAAOtF,GAAA,GAElC6G,EAAA,CAAM8D,OAAA,CAAQ,UAAA/P,CAAA;UACVD,CAAA,CAAI6P,SAAA,GAAY5P,CAAA,CAAK4C,KAAA,EACrB7C,CAAA,CAAI8P,QAAA,CAAS7P,CAAA,CAAKoC,CAAA,EAAGpC,CAAA,CAAKqC,CAAA,EAAGrC,CAAA,CAAK4B,KAAA,EAAO5B,CAAA,CAAK6B,MAAA,GAE1CI,CAAA,GAAc,MACdlC,CAAA,CAAIiQ,WAAA,GAAchQ,CAAA,CAAK+C,WAAA,EACvBhD,CAAA,CAAIkQ,SAAA,GAAYhO,CAAA,EAChBlC,CAAA,CAAImQ,UAAA,CAAWlQ,CAAA,CAAKoC,CAAA,EAAGpC,CAAA,CAAKqC,CAAA,EAAGrC,CAAA,CAAK4B,KAAA,EAAO5B,CAAA,CAAK6B,MAAA,EAExD;QAAA,IAEI6B,CAAA,KACA3D,CAAA,CAAIoQ,SAAA,GAAY,UAChBpQ,CAAA,CAAIqQ,YAAA,GAAe,UACnBrQ,CAAA,CAAIsQ,IAAA,GAAUnE,EAAA,CAAMvI,MAAA,CAAOL,IAAA,CAAKgN,QAAA,WAAcpE,EAAA,CAAMvI,MAAA,CAAOL,IAAA,CAAKiN,UAAA,EAEhEtE,EAAA,CAAM8D,OAAA,CAAQ,UAAA/P,CAAA;UAKV,IAHIA,CAAA,CAAKyB,MAAA,KACc,MAAlBgD,CAAA,IAAuB/C,IAAA,CAAKC,GAAA,CAAI3B,CAAA,CAAK4B,KAAA,EAAO5B,CAAA,CAAK6B,MAAA,IAAU4C,CAAA,GAEhE;YAEA,IAAMnE,CAAA,GAASG,CAAA,IAAeT,CAAA,CAAK6B,MAAA,GAAS7B,CAAA,CAAK4B,KAAA;YAEjD7B,CAAA,CAAIyQ,IAAA,IACJzQ,CAAA,CAAI+P,SAAA,CAAU9P,CAAA,CAAKoC,CAAA,GAAIpC,CAAA,CAAK4B,KAAA,GAAQ,GAAG5B,CAAA,CAAKqC,CAAA,GAAIrC,CAAA,CAAK6B,MAAA,GAAS,IAC9D9B,CAAA,CAAI0Q,MAAA,CAAOnH,CAAA,CAAiBhJ,CAAA,IAAU,KAAK,KAE3CP,CAAA,CAAI6P,SAAA,GAAY5P,CAAA,CAAK4D,cAAA,EACrB7D,CAAA,CAAI2Q,QAAA,CAAQ,KAAI1Q,CAAA,CAAKkE,KAAA,EAAS,GAAG,IAEjCnE,CAAA,CAAI4Q,OAAA,EAXY;UAAA;QAYpB,IA/C2B;MAAA;IAiDnC,GAAG,CACCzG,EAAA,EACA+B,EAAA,EACAL,EAAA,EACAE,EAAA,EACAjB,EAAA,EACAc,EAAA,EACAjB,EAAA,EACAzI,CAAA,EACAyB,CAAA,EACAjD,CAAA,EACAgE,CAAA,EACAyH,EAAA,EACArC,EAAA;IAGJ,IAAAwD,EAAA,GAA8C7D,CAAA;MAAtC8D,EAAA,GAAoBD,EAAA,CAApBZ,oBAAA;MAAsBc,EAAA,GAAWF,EAAA,CAAXX,WAAA;MAExBc,EAAA,GAAmBxN,CAAA,CACrB,UAACD,CAAA;QACG,IAAyB,SAArBmK,EAAA,CAASuF,OAAA,EAAb;UAEA,IAAAzP,CAAA,GAAeuJ,CAAA,CAAkBW,EAAA,CAASuF,OAAA,EAAS1P,CAAA;YAA5Ce,CAAA,GAACd,CAAA;YAAEgB,CAAA,GAAChB,CAAA;YACLkB,CAAA,GAAO8K,EAAA,CAAoBC,EAAA,EAAOvB,EAAA,EAAQ5J,CAAA,EAAGE,CAAA;UAAA,KAEtC,MAATE,CAAA,IACAoM,EAAA,CAAqBhN,CAAA,CAAciI,EAAA,EAAS;YAAE3H,IAAA,EAAAM;UAAA,IAASnB,CAAA,EAAO,iBAC9DsH,CAAA,IAAAA,CAAA,CAAcnG,CAAA,EAAMnB,CAAA,KAEpBwN,EAAA,EAT2B;QAAA;MAWnC,GACA,CAACrD,EAAA,EAAU+B,EAAA,EAAOvB,EAAA,EAAQ4C,EAAA,EAAsBC,EAAA,EAAahF,EAAA,EAASlB,CAAA;MAGpEoG,EAAA,GAAmBzN,CAAA,CAAY;QACjCuN,EAAA,EACJ;MAAA,GAAG,CAACA,EAAA;MAEEG,EAAA,GAAc1N,CAAA,CAChB,UAACD,CAAA;QACG,IAAyB,SAArBmK,EAAA,CAASuF,OAAA,EAAb;UAEA,IAAAzP,CAAA,GAAeuJ,CAAA,CAAkBW,EAAA,CAASuF,OAAA,EAAS1P,CAAA;YAA5CO,CAAA,GAACN,CAAA;YAAEc,CAAA,GAACd,CAAA;YACLgB,CAAA,GAAOgL,EAAA,CAAoBC,EAAA,EAAOvB,EAAA,EAAQpK,CAAA,EAAGQ,CAAA;UAAA,KAEtC,MAATE,CAAA,aAEJwG,CAAA,IAAAA,CAAA,CAAUxG,CAAA,EAAMjB,CAAA,EAPe;QAAA;MAQlC,GACD,CAACmK,EAAA,EAAU+B,EAAA,EAAOvB,EAAA,EAAQlD,CAAA;IAG9B,OACIjF,CAAA;MACIqO,GAAA,EAAK1G,EAAA;MACLtI,KAAA,EAAOgK,EAAA,GAAa/B,EAAA;MACpBhI,MAAA,EAAQiK,EAAA,GAAcjC,EAAA;MACtBpG,KAAA,EAAO;QACH7B,KAAA,EAAOgK,EAAA;QACP/J,MAAA,EAAQiK;MAAA;MAEZ5I,YAAA,EAAc6C,CAAA,GAAgByH,EAAA,QAAmB;MACjDrK,WAAA,EAAa4C,CAAA,GAAgByH,EAAA,QAAmB;MAChDpK,YAAA,EAAc2C,CAAA,GAAgB0H,EAAA,QAAmB;MACjDpK,OAAA,EAAS0C,CAAA,GAAgB2H,EAAA,QAAc;MACvCxG,IAAA,EAAM4C,EAAA;MACN,cAAYC,EAAA;MACZ,mBAAiBC,EAAA;MACjB,oBAAkBC;IAAA,EAG9B;EAAA;EAEaiC,EAAA,GAAgB,SAAA2E,CAAH9Q,CAAA;IAAA,IACtBC,CAAA,GAAKD,CAAA,CAALiP,KAAA;MAAK1O,CAAA,GAAAP,CAAA,CACLiH,aAAA;MAAAlG,CAAA,QAAa,MAAAR,CAAA,GAAGmH,CAAA,CAAmBT,aAAA,GAAa1G,CAAA;MAAAU,CAAA,GAAAjB,CAAA,CAChDoH,OAAA;MAAAjG,CAAA,QAAO,MAAAF,CAAA,GAAGyG,CAAA,CAAmBN,OAAA,GAAOnG,CAAA;MAAAI,CAAA,GAAArB,CAAA,CACpCqH,YAAA;MAAA7F,CAAA,QAAY,MAAAH,CAAA,GAAGqG,CAAA,CAAmBL,YAAA,GAAYhG,CAAA;MAC9CE,CAAA,GAAavB,CAAA,CAAbkP,aAAA;MACGzN,CAAA,GAAUmI,CAAA,CAAA5J,CAAA,EAAA+L,EAAA;IAAA,OAEbvJ,CAAA,CAACyG,CAAA,EAAS;MAAOhC,aAAA,EAAAlG,CAAA;MAAeqG,OAAA,EAAAjG,CAAA;MAASkG,YAAA,EAAA7F,CAAA;MAAcyN,KAAA,EAAAhP,CAAA;MAAOiP,aAAA,EAAA3N,CAAA;MAAagB,QAAA,EACvEC,CAAA,CAAC0J,EAAA,EAAkBvI,CAAA;QAAQsD,aAAA,EAAelG;MAAA,GAAmBU,CAAA;IAAA,EACrD;EAAA;EC/NH6L,EAAA,GAA0B,SAAAyD,CACnC/Q,CAAA;IAA0D,OAE1DwC,CAAA,CAAC8G,CAAA,EAAiB;MAAA/G,QAAA,EACb,SAAAA,CAAAtC,CAAA;QAAA,IAAGM,CAAA,GAAKN,CAAA,CAAL4B,KAAA;UAAOd,CAAA,GAAMd,CAAA,CAAN6B,MAAA;QAAM,OAAOU,CAAA,CAAC2J,EAAA,EAAaxI,CAAA;UAAQ9B,KAAA,EAAOtB,CAAA;UAAOuB,MAAA,EAAQf;QAAA,GAAYf,CAAA,EAAS;MAAA;IAAA,EACzE;EAAA;AAAA,SAAA0K,EAAA,IAAAyE,iBAAA,EAAA7B,EAAA,IAAAyD,uBAAA,EAAAlF,EAAA,IAAAyD,qBAAA,EAAAnF,EAAA,IAAA6E,OAAA,EAAA7C,EAAA,IAAA2E,aAAA,EAAAlF,EAAA,IAAAyD,WAAA,EAAA3H,CAAA,IAAAsJ,kBAAA,EAAAhL,CAAA,IAAAiL,kBAAA,EAAAxJ,CAAA,IAAAyJ,gBAAA,EAAA1Q,CAAA,IAAAC,kBAAA,EAAAN,CAAA,IAAAC,iBAAA,EAAAM,CAAA,IAAAC,wBAAA,EAAA2G,CAAA,IAAA6J,eAAA,EAAA9Q,CAAA,IAAAC,iBAAA,EAAAR,CAAA,IAAAC,gBAAA,EAAA+H,CAAA,IAAAsJ,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}