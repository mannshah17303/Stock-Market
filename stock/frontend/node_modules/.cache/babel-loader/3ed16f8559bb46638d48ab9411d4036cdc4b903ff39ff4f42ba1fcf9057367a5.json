{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\StockMarket\\\\stock\\\\frontend\\\\src\\\\BuySell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Plot from \"react-plotly.js\";\nimport \"./App.css\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuySell = () => {\n  _s();\n  const [fetchCompanies, setFetchCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [macdData, setMacdData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [chartTitle, setChartTitle] = useState(\"\");\n  const [showBuySell, setShowBuySell] = useState(false);\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [total, setTotal] = useState(null);\n  const [ltp, setLtp] = useState(null);\n  const [companySelected, setCompanySelected] = useState(false);\n  const navigate = useNavigate();\n  const typeaheadRef = useRef();\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const companyResponse = await axios.get(\"http://localhost:5000/api/get-symbols\");\n        if (companyResponse.data.length > 0) {\n          setFetchCompanies(companyResponse.data);\n          selectRandomCompany(companyResponse.data);\n        } else {\n          setError(\"No companies available\");\n        }\n      } catch (error) {\n        setError(error.message || \"An error occurred while fetching data.\");\n        setLoading(false);\n      }\n    };\n    const selectRandomCompany = async companies => {\n      try {\n        setLoading(true);\n        const randomCompany = companies[0];\n        const symbol = randomCompany.SYMBOL;\n        const token = randomCompany.TOKEN;\n        const [companyData, macdData, ltpData] = await Promise.all([axios.get(`http://localhost:5000/api/company/${symbol}`), axios.get(`http://localhost:5000/api/macd/${symbol}`), axios.get(`http://localhost:5000/api/ltp/${symbol}/${token}`)]);\n        setSelectedCompany({\n          ...randomCompany,\n          data: companyData.data\n        });\n        setMacdData(macdData.data);\n        setLtp(ltpData.data.ltp);\n        setChartTitle(symbol);\n        setCompanySelected(true);\n        setShowBuySell(false);\n        if (typeaheadRef.current) {\n          typeaheadRef.current.clear();\n        }\n      } catch (error) {\n        console.error(\"Error fetching company data:\", error);\n        setError(error.message || \"An error occurred while fetching data for the random company.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const handleCompanySelect = async selected => {\n    if (!selected || selected.length === 0) {\n      setError(\"No company selected.\");\n      return;\n    }\n    const company = selected[0];\n    const symbol = company.SYMBOL;\n    const token = company.TOKEN;\n    try {\n      const [companyResponse, macdResponse, ltpResponse] = await Promise.all([axios.get(`http://localhost:5000/api/company/${symbol}`), axios.get(`http://localhost:5000/api/macd/${symbol}`), axios.get(`http://localhost:5000/api/ltp/${symbol}/${token}`)]);\n      console.log(\"Company Data:\", companyResponse.data);\n      console.log(\"MACD Data:\", macdResponse.data);\n      console.log(\"LTP Data:\", ltpResponse.data);\n      if (!companyResponse.data || !Array.isArray(companyResponse.data) || companyResponse.data.length === 0) {\n        throw new Error(\"Invalid company data received.\");\n      }\n      setSelectedCompany({\n        ...company,\n        data: companyResponse.data\n      });\n      setMacdData(macdResponse.data);\n      setLtp(ltpResponse.data.ltp);\n      setChartTitle(symbol);\n      setCompanySelected(true);\n      setShowBuySell(false);\n      if (typeaheadRef.current) {\n        typeaheadRef.current.clear();\n      }\n    } catch (error) {\n      setError(error.message || `An error occurred while fetching data for ${symbol}.`);\n    }\n  };\n  const handleHomePage = () => {\n    navigate(\"/\");\n  };\n  const handleBuySellClick = () => {\n    setShowBuySell(true);\n    setPrice(ltp ? parseFloat(ltp).toFixed(2) : \"\");\n  };\n  const handleQuantityChange = e => {\n    const enteredQuantity = e.target.value;\n    const totalPrice = enteredQuantity * price;\n    setQuantity(enteredQuantity);\n    setTotal(totalPrice);\n  };\n  const handlePlaceOrder = async () => {\n    if (!selectedCompany) {\n      console.error(\"No company selected\");\n      return;\n    }\n    const {\n      SYMBOL,\n      TOKEN\n    } = selectedCompany;\n    console.log(`Placing order for symbol: ${SYMBOL}, token: ${TOKEN}, quantity: ${quantity}`);\n    try {\n      const placeOrderResponse = await axios.get(`http://localhost:5000/api/placeorder/${SYMBOL}/${TOKEN}/${quantity}`);\n      console.log(placeOrderResponse);\n      console.log(\"Order placed\");\n    } catch (error) {\n      console.error(\"Error placing order:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  if (!Array.isArray(fetchCompanies) || fetchCompanies.length === 0) {\n    console.error(\"Invalid data format. Expected a non-empty array.\");\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: Invalid data format.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  }\n  const layout = {\n    dragmode: \"zoom\",\n    showlegend: false,\n    width: 1180,\n    height: 700,\n    margin: {\n      t: 30,\n      l: 50,\n      r: 50,\n      b: 30\n    },\n    xaxis: {\n      autorange: true,\n      title: \"Date\",\n      rangeselector: {\n        x: 0,\n        y: 1.2,\n        xanchor: \"left\",\n        font: {\n          size: 8\n        },\n        buttons: [{\n          step: \"month\",\n          stepmode: \"backward\",\n          count: 1,\n          label: \"1 month\"\n        }, {\n          step: \"month\",\n          stepmode: \"backward\",\n          count: 6,\n          label: \"6 months\"\n        }, {\n          step: \"all\",\n          label: \"All dates\"\n        }]\n      }\n    },\n    yaxis: {\n      autorange: true\n    },\n    title: {\n      text: chartTitle,\n      font: {\n        family: \"Arial, sans-serif\",\n        size: 16,\n        color: \"#333\"\n      },\n      xref: \"paper\",\n      x: 0.5,\n      xanchor: \"center\",\n      y: 0.9,\n      yanchor: \"top\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown1 custom-typeahead\",\n            children: /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"company-typeahead\",\n              labelKey: \"SYMBOL\",\n              options: fetchCompanies,\n              placeholder: \"Choose a company...\",\n              ref: typeaheadRef,\n              onChange: handleCompanySelect,\n              renderMenuItemChildren: option => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: option.SYMBOL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), showBuySell && selectedCompany && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buy-sell-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Quantity\",\n              value: quantity,\n              onChange: handleQuantityChange,\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Price\",\n              value: price,\n              onChange: e => setPrice(e.target.value),\n              disabled: ltp !== null,\n              className: \"input-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"place-order\",\n              onClick: handlePlaceOrder,\n              children: [\"Pay Full \", `@ ${parseFloat(total).toFixed(2)}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: handleHomePage,\n          children: \"Data Decode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buy-sell\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buy-button\",\n          onClick: handleBuySellClick,\n          children: [\"Buy \", ltp ? `@ ${parseFloat(ltp).toFixed(2)}` : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sell-button\",\n          onClick: handleBuySellClick,\n          children: [\"Sell \", ltp ? `@ ${parseFloat(ltp).toFixed(2)}` : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: selectedCompany && /*#__PURE__*/_jsxDEV(Plot, {\n          data: [{\n            x: selectedCompany.data.map(item => item.DTE_TME),\n            open: selectedCompany.data.map(item => parseFloat(item.OPEN)),\n            high: selectedCompany.data.map(item => parseFloat(item.HIGH)),\n            low: selectedCompany.data.map(item => parseFloat(item.LOW)),\n            close: selectedCompany.data.map(item => parseFloat(item.CLOSE)),\n            type: \"candlestick\",\n            name: `${selectedCompany.SYMBOL} Candlestick Chart`\n          }, macdData && {\n            x: macdData.map(item => item.date),\n            y: macdData.map(item => item.macd),\n            type: \"scatter\",\n            mode: \"lines\",\n            name: \"MACD\",\n            yaxis: \"y2\",\n            line: {\n              color: \"blue\"\n            }\n          }, macdData && {\n            x: macdData.map(item => item.date),\n            y: macdData.map(item => item.signal),\n            type: \"scatter\",\n            mode: \"lines\",\n            name: \"Signal Line\",\n            yaxis: \"y2\",\n            line: {\n              color: \"red\"\n            }\n          }, macdData && {\n            x: macdData.map(item => item.date),\n            y: macdData.map(item => item.histogram),\n            type: \"bar\",\n            name: \"Histogram\",\n            yaxis: \"y2\",\n            marker: {\n              color: \"green\"\n            }\n          }],\n          layout: {\n            ...layout,\n            yaxis2: {\n              overlaying: \"y\",\n              side: \"right\",\n              title: \"MACD\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(BuySell, \"XbQDoqBt8mSQisVNR79bJWAMCs8=\", false, function () {\n  return [useNavigate];\n});\n_c = BuySell;\nexport default BuySell;\nvar _c;\n$RefreshReg$(_c, \"BuySell\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","axios","Plot","Typeahead","jsxDEV","_jsxDEV","BuySell","_s","fetchCompanies","setFetchCompanies","selectedCompany","setSelectedCompany","macdData","setMacdData","error","setError","loading","setLoading","chartTitle","setChartTitle","showBuySell","setShowBuySell","quantity","setQuantity","price","setPrice","total","setTotal","ltp","setLtp","companySelected","setCompanySelected","navigate","typeaheadRef","fetchInitialData","companyResponse","get","data","length","selectRandomCompany","message","companies","randomCompany","symbol","SYMBOL","token","TOKEN","companyData","ltpData","Promise","all","current","clear","console","handleCompanySelect","selected","company","macdResponse","ltpResponse","log","Array","isArray","Error","handleHomePage","handleBuySellClick","parseFloat","toFixed","handleQuantityChange","e","enteredQuantity","target","value","totalPrice","handlePlaceOrder","placeOrderResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","layout","dragmode","showlegend","width","height","margin","t","l","r","b","xaxis","autorange","title","rangeselector","x","y","xanchor","font","size","buttons","step","stepmode","count","label","yaxis","text","family","color","xref","yanchor","className","id","labelKey","options","placeholder","ref","onChange","renderMenuItemChildren","option","type","disabled","onClick","map","item","DTE_TME","open","OPEN","high","HIGH","low","LOW","close","CLOSE","name","date","macd","mode","line","signal","histogram","marker","yaxis2","overlaying","side","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/StockMarket/stock/frontend/src/BuySell.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Plot from \"react-plotly.js\";\r\nimport \"./App.css\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst BuySell = () => {\r\n  const [fetchCompanies, setFetchCompanies] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n  const [macdData, setMacdData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [chartTitle, setChartTitle] = useState(\"\");\r\n  const [showBuySell, setShowBuySell] = useState(false);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [total, setTotal] = useState(null);\r\n  const [ltp, setLtp] = useState(null);\r\n  const [companySelected, setCompanySelected] = useState(false);\r\n  const navigate = useNavigate();\r\n  const typeaheadRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const companyResponse = await axios.get(\"http://localhost:5000/api/get-symbols\");\r\n        if (companyResponse.data.length > 0) {\r\n          setFetchCompanies(companyResponse.data);\r\n          selectRandomCompany(companyResponse.data);\r\n        } else {\r\n          setError(\"No companies available\");\r\n        }\r\n      } catch (error) {\r\n        setError(error.message || \"An error occurred while fetching data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const selectRandomCompany = async (companies) => {\r\n      try {\r\n        setLoading(true);\r\n        const randomCompany = companies[0];\r\n        const symbol = randomCompany.SYMBOL;\r\n        const token = randomCompany.TOKEN;\r\n\r\n        const [companyData, macdData, ltpData] = await Promise.all([\r\n          axios.get(`http://localhost:5000/api/company/${symbol}`),\r\n          axios.get(`http://localhost:5000/api/macd/${symbol}`),\r\n          axios.get(`http://localhost:5000/api/ltp/${symbol}/${token}`)\r\n        ]);\r\n\r\n        setSelectedCompany({ ...randomCompany, data: companyData.data });\r\n        setMacdData(macdData.data);\r\n        setLtp(ltpData.data.ltp);\r\n        setChartTitle(symbol);\r\n        setCompanySelected(true);\r\n        setShowBuySell(false);\r\n        if (typeaheadRef.current) {\r\n          typeaheadRef.current.clear();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching company data:\", error);\r\n        setError(error.message || \"An error occurred while fetching data for the random company.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  const handleCompanySelect = async (selected) => {\r\n    if (!selected || selected.length === 0) {\r\n      setError(\"No company selected.\");\r\n      return;\r\n    }\r\n\r\n    const company = selected[0];\r\n    const symbol = company.SYMBOL;\r\n    const token = company.TOKEN;\r\n\r\n    try {\r\n      const [companyResponse, macdResponse, ltpResponse] = await Promise.all([\r\n        axios.get(`http://localhost:5000/api/company/${symbol}`),\r\n        axios.get(`http://localhost:5000/api/macd/${symbol}`),\r\n        axios.get(`http://localhost:5000/api/ltp/${symbol}/${token}`)\r\n      ]);\r\n\r\n      console.log(\"Company Data:\", companyResponse.data);\r\n      console.log(\"MACD Data:\", macdResponse.data);\r\n      console.log(\"LTP Data:\", ltpResponse.data);\r\n\r\n      if (!companyResponse.data || !Array.isArray(companyResponse.data) || companyResponse.data.length === 0) {\r\n        throw new Error(\"Invalid company data received.\");\r\n      }\r\n\r\n      setSelectedCompany({ ...company, data: companyResponse.data });\r\n      setMacdData(macdResponse.data);\r\n      setLtp(ltpResponse.data.ltp);\r\n      setChartTitle(symbol);\r\n      setCompanySelected(true);\r\n      setShowBuySell(false);\r\n      if (typeaheadRef.current) {\r\n        typeaheadRef.current.clear();\r\n      }\r\n    } catch (error) {\r\n      setError(error.message || `An error occurred while fetching data for ${symbol}.`);\r\n    }\r\n  };\r\n\r\n  const handleHomePage = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleBuySellClick = () => {\r\n    setShowBuySell(true);\r\n    setPrice(ltp ? parseFloat(ltp).toFixed(2) : \"\");\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const enteredQuantity = e.target.value;\r\n    const totalPrice = enteredQuantity * price;\r\n    setQuantity(enteredQuantity);\r\n    setTotal(totalPrice);\r\n  };\r\n\r\n  const handlePlaceOrder = async () => {\r\n    if (!selectedCompany) {\r\n      console.error(\"No company selected\");\r\n      return;\r\n    }\r\n    const { SYMBOL, TOKEN } = selectedCompany;\r\n    console.log(`Placing order for symbol: ${SYMBOL}, token: ${TOKEN}, quantity: ${quantity}`);\r\n    try {\r\n      const placeOrderResponse = await axios.get(`http://localhost:5000/api/placeorder/${SYMBOL}/${TOKEN}/${quantity}`);\r\n      console.log(placeOrderResponse);\r\n      console.log(\"Order placed\");\r\n    } catch (error) {\r\n      console.error(\"Error placing order:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading data...</p>;\r\n  }\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  if (!Array.isArray(fetchCompanies) || fetchCompanies.length === 0) {\r\n    console.error(\"Invalid data format. Expected a non-empty array.\");\r\n    return <p>Error: Invalid data format.</p>;\r\n  }\r\n\r\n  const layout = {\r\n    dragmode: \"zoom\",\r\n    showlegend: false,\r\n    width: 1180,\r\n    height: 700,\r\n    margin: {\r\n      t: 30,\r\n      l: 50,\r\n      r: 50,\r\n      b: 30,\r\n    },\r\n    xaxis: {\r\n      autorange: true,\r\n      title: \"Date\",\r\n      rangeselector: {\r\n        x: 0,\r\n        y: 1.2,\r\n        xanchor: \"left\",\r\n        font: { size: 8 },\r\n        buttons: [\r\n          {\r\n            step: \"month\",\r\n            stepmode: \"backward\",\r\n            count: 1,\r\n            label: \"1 month\",\r\n          },\r\n          {\r\n            step: \"month\",\r\n            stepmode: \"backward\",\r\n            count: 6,\r\n            label: \"6 months\",\r\n          },\r\n          {\r\n            step: \"all\",\r\n            label: \"All dates\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    yaxis: {\r\n      autorange: true,\r\n    },\r\n    title: {\r\n      text: chartTitle,\r\n      font: {\r\n        family: \"Arial, sans-serif\",\r\n        size: 16,\r\n        color: \"#333\",\r\n      },\r\n      xref: \"paper\",\r\n      x: 0.5,\r\n      xanchor: \"center\",\r\n      y: 0.9,\r\n      yanchor: \"top\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <nav className=\"navbar flex-column\">\r\n          <div className=\"sidebar-content\">\r\n            <div className=\"dropdown1 custom-typeahead\">\r\n              <Typeahead\r\n                id=\"company-typeahead\"\r\n                labelKey=\"SYMBOL\"\r\n                options={fetchCompanies}\r\n                placeholder=\"Choose a company...\"\r\n                ref={typeaheadRef}\r\n                onChange={handleCompanySelect}\r\n                renderMenuItemChildren={(option) => <div>{option.SYMBOL}</div>}\r\n              />\r\n            </div>\r\n            {showBuySell && selectedCompany && (\r\n              <div className=\"buy-sell-inputs\">\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Quantity\"\r\n                  value={quantity}\r\n                  onChange={handleQuantityChange}\r\n                  className=\"input-field\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Price\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  disabled={ltp !== null}\r\n                  className=\"input-field\"\r\n                />\r\n                <button className=\"place-order\" onClick={handlePlaceOrder}>\r\n                  Pay Full {`@ ${parseFloat(total).toFixed(2)}`}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"heading\">\r\n          <h1 onClick={handleHomePage}>Data Decode</h1>\r\n        </div>\r\n        <div className=\"buy-sell\">\r\n          <button className=\"buy-button\" onClick={handleBuySellClick}>\r\n            Buy {ltp ? `@ ${parseFloat(ltp).toFixed(2)}` : \"\"}\r\n          </button>\r\n          <button className=\"sell-button\" onClick={handleBuySellClick}>\r\n            Sell {ltp ? `@ ${parseFloat(ltp).toFixed(2)}` : \"\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"chart\">\r\n          {selectedCompany && (\r\n            <Plot\r\n              data={[\r\n                {\r\n                  x: selectedCompany.data.map((item) => item.DTE_TME),\r\n                  open: selectedCompany.data.map((item) => parseFloat(item.OPEN)),\r\n                  high: selectedCompany.data.map((item) => parseFloat(item.HIGH)),\r\n                  low: selectedCompany.data.map((item) => parseFloat(item.LOW)),\r\n                  close: selectedCompany.data.map((item) => parseFloat(item.CLOSE)),\r\n                  type: \"candlestick\",\r\n                  name: `${selectedCompany.SYMBOL} Candlestick Chart`,\r\n                },\r\n                macdData && {\r\n                  x: macdData.map((item) => item.date),\r\n                  y: macdData.map((item) => item.macd),\r\n                  type: \"scatter\",\r\n                  mode: \"lines\",\r\n                  name: \"MACD\",\r\n                  yaxis: \"y2\",\r\n                  line: { color: \"blue\" },\r\n                },\r\n                macdData && {\r\n                  x: macdData.map((item) => item.date),\r\n                  y: macdData.map((item) => item.signal),\r\n                  type: \"scatter\",\r\n                  mode: \"lines\",\r\n                  name: \"Signal Line\",\r\n                  yaxis: \"y2\",\r\n                  line: { color: \"red\" },\r\n                },\r\n                macdData && {\r\n                  x: macdData.map((item) => item.date),\r\n                  y: macdData.map((item) => item.histogram),\r\n                  type: \"bar\",\r\n                  name: \"Histogram\",\r\n                  yaxis: \"y2\",\r\n                  marker: { color: \"green\" },\r\n                },\r\n              ]}\r\n              layout={{\r\n                ...layout,\r\n                yaxis2: {\r\n                  overlaying: \"y\",\r\n                  side: \"right\",\r\n                  title: \"MACD\",\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuySell;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}